

epoch: 1, loss: 0.62, time: 5.41:   0%|             | 1/400 [00:05<35:58,  5.41s/it]
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6886, -0.6260, -0.8651,  ..., -0.9837, -1.3060,  0.1658],
        [ 1.4827,  0.7266,  0.5569,  ...,  0.4806, -0.1935,  1.5500],
        [ 1.2271, -1.3323,  2.1216,  ..., -0.0150, -0.3442, -0.3146],
        ...,
        [-1.2598, -0.4468, -1.6427,  ..., -0.3733, -0.1758,  2.0205],
        [ 1.0588, -0.5974,  2.2998,  ..., -2.0504, -0.1055,  1.5851],
        [ 1.3462, -2.1522, -0.2581,  ..., -0.9283, -1.1262,  0.1476]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2282,  0.3263, -1.4831,  ...,  0.0793,  0.2273,  0.6429],
        [ 0.0613,  0.7494,  0.1421,  ..., -0.0754,  1.4335,  0.2669],
        [ 1.4016,  0.6267,  1.9323,  ...,  0.0532, -2.1373,  1.7350],
        ...,
        [-0.4231,  0.3378,  0.3642,  ..., -0.9571,  0.7073, -2.7620],
        [ 0.6807, -1.1907, -1.7635,  ...,  0.8857,  0.0477,  0.5072],
        [ 0.7301,  0.7144, -0.3874,  ..., -2.7140,  0.1858, -0.3362]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1725,  0.1062,  0.1620,  ..., -0.0542, -0.1625, -0.0103],
        [-0.0183,  0.0546, -0.0427,  ..., -0.0613,  0.1660, -0.1065],
        [ 0.1401,  0.0752, -0.1230,  ..., -0.1291, -0.0444,  0.0820],
        ...,
        [-0.0732,  0.1121,  0.1030,  ..., -0.1326,  0.1360, -0.1728],
        [ 0.0003,  0.0526, -0.1522,  ...,  0.1112, -0.0317,  0.0313],
        [-0.1091,  0.0425,  0.1759,  ...,  0.0507,  0.0624,  0.1273]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1560,  0.0291, -0.1168, -0.0618,  0.1391, -0.0144,  0.0138,  0.0114,
        -0.1051, -0.1209, -0.0848, -0.1552, -0.0854,  0.0038, -0.0675,  0.1002,
        -0.0861, -0.0946, -0.1679,  0.1484,  0.1472,  0.1517,  0.0192, -0.0038,
         0.0772, -0.0672,  0.0294,  0.0516,  0.0505, -0.0595,  0.0949, -0.1512],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 0.1389, -0.1202, -0.0065,  0.0479,  0.0534,  0.1272, -0.1552,  0.1227,
          0.0916, -0.1419,  0.1454, -0.1155,  0.0523,  0.1123, -0.0544,  0.1619,
         -0.0760,  0.0633,  0.1236,  0.1583, -0.0902,  0.1356,  0.1379,  0.0742,
          0.0683, -0.0992,  0.1268, -0.1033,  0.0789,  0.0322, -0.0683, -0.0480],
        [-0.1291, -0.1189,  0.0227,  0.0194, -0.1507,  0.1197, -0.0999, -0.0849,
          0.0034,  0.0690,  0.0977, -0.0054,  0.1753,  0.0675, -0.0210,  0.1413,
         -0.1731,  0.0308,  0.1140,  0.1607, -0.1216, -0.0081,  0.0422,  0.1547,
         -0.1165, -0.1463, -0.0010,  0.1615,  0.1576, -0.0073, -0.1122,  0.1006],
        [ 0.0643,  0.1023, -0.1363, -0.1207,  0.0239,  0.0387, -0.0700,  0.0740,
         -0.0859,  0.0266, -0.0030, -0.0137, -0.1016,  0.0010,  0.0812,  0.0082,
          0.1015, -0.1497, -0.0131, -0.1468,  0.0419,  0.0488, -0.0331,  0.0500,
          0.0644, -0.1134, -0.1767, -0.1585, -0.1116, -0.0018,  0.0894, -0.1382],
        [ 0.0326,  0.0419, -0.0492,  0.0994,  0.0869,  0.0275, -0.1602,  0.1503,
         -0.0334, -0.1398, -0.1143,  0.0776,  0.1322, -0.0726, -0.1641, -0.1543,
          0.1098,  0.1603, -0.0695,  0.1283,  0.1186,  0.0785,  0.0835,  0.1564,
          0.1119, -0.0579,  0.0261, -0.0477,  0.0801, -0.0619, -0.0917, -0.0763],
        [ 0.0799,  0.1096, -0.1128,  0.1042, -0.1572,  0.1534, -0.0627,  0.0406,
         -0.1227,  0.1208, -0.1272, -0.0657,  0.1272, -0.1063, -0.1737, -0.0606,
         -0.0916,  0.0401, -0.0524, -0.0114, -0.0487,  0.1100, -0.0079, -0.0688,
         -0.0222,  0.0224, -0.1331,  0.0924, -0.1503,  0.0011,  0.0537, -0.1618],
        [ 0.1137, -0.0913,  0.0925,  0.1585, -0.1067,  0.0380,  0.0987, -0.0078,
          0.0453,  0.1054,  0.0185,  0.0681,  0.1490,  0.0259,  0.0297, -0.1618,
          0.1747,  0.0793,  0.0908, -0.1365,  0.0492,  0.0956, -0.0762,  0.0787,
         -0.0947, -0.0698, -0.1210, -0.1645, -0.1055,  0.0102, -0.1246, -0.1353],
        [-0.1422,  0.1713,  0.1082, -0.1488, -0.1723, -0.1130,  0.1556, -0.0533,
          0.0306,  0.0353, -0.1005, -0.1700,  0.0961,  0.1296, -0.1685,  0.0590,
          0.0336,  0.0350, -0.0903,  0.1157,  0.0361,  0.0069, -0.0961, -0.0716,
          0.1286, -0.0092,  0.1491, -0.1660, -0.1105,  0.1516, -0.1272,  0.0896],
        [-0.0794, -0.0055, -0.1317,  0.0385, -0.0642,  0.1185, -0.1373, -0.1078,
          0.0526, -0.0907, -0.1018,  0.0809, -0.0406,  0.1592, -0.0011,  0.0708,
          0.0285,  0.0233,  0.1480,  0.1103,  0.1071, -0.0051, -0.0345,  0.1063,
         -0.0479, -0.0988,  0.0468,  0.0965, -0.0108,  0.1711,  0.1014,  0.0220],
        [ 0.0958,  0.1158,  0.0705,  0.1633,  0.0196,  0.1405,  0.0167,  0.0603,
          0.1260, -0.1041, -0.1193, -0.0965, -0.0882, -0.0538, -0.0570, -0.0505,
          0.0963, -0.0187,  0.1677, -0.0737, -0.0528,  0.0568, -0.0090,  0.0438,
          0.0421,  0.0166, -0.1077, -0.1079, -0.0942, -0.0377, -0.1124, -0.1235],
        [-0.1693,  0.0092,  0.0320, -0.1407,  0.0257, -0.0345,  0.0568, -0.0573,
         -0.1501, -0.0321, -0.1012,  0.0729,  0.0227,  0.0493,  0.0233,  0.0965,
         -0.0899, -0.0065, -0.0663,  0.1623,  0.1611, -0.0824, -0.1012,  0.1400,
         -0.1309,  0.0238, -0.1144,  0.0449,  0.0033,  0.0938,  0.0045,  0.1091],
        [ 0.0882, -0.1762,  0.0160,  0.0911, -0.0972, -0.1213, -0.1196, -0.0378,
          0.0525, -0.0915, -0.0945, -0.0272,  0.1579,  0.1287,  0.0034,  0.0518,
         -0.0655, -0.0921,  0.0407, -0.0034, -0.1069,  0.1090,  0.0496, -0.1568,
         -0.0423,  0.1442, -0.1626, -0.1544, -0.0219, -0.0953,  0.1651,  0.1655],
        [ 0.0767,  0.0180, -0.1467,  0.1190, -0.0933,  0.0618,  0.1702,  0.0080,
          0.0298, -0.0770,  0.1475, -0.0432, -0.1442,  0.0617,  0.0818, -0.0341,
         -0.1066,  0.1279,  0.0366, -0.0073, -0.1653, -0.1639, -0.0178, -0.1002,
         -0.0644, -0.1454,  0.0099, -0.1111,  0.0593,  0.1573, -0.1755, -0.0138],
        [ 0.1173,  0.1474,  0.0708,  0.0449, -0.0825,  0.1336, -0.0227,  0.1515,
          0.1474,  0.0600,  0.0181, -0.0404, -0.1443,  0.0065,  0.0527, -0.0401,
          0.1594,  0.0492,  0.0071, -0.1128, -0.0871, -0.0331,  0.1752,  0.0993,
          0.1561, -0.0795,  0.0233,  0.0247,  0.0536,  0.0303, -0.1257, -0.0183],
        [ 0.0726, -0.1650,  0.0904,  0.0143,  0.1206,  0.0185, -0.0944,  0.1727,
         -0.1194,  0.0289,  0.0190,  0.0123,  0.1078,  0.0352,  0.0536, -0.1132,
          0.1270,  0.0348, -0.0777,  0.1114, -0.0416,  0.1040,  0.1204, -0.0338,
          0.0134,  0.1748, -0.1268,  0.0207, -0.1601,  0.0398, -0.0847,  0.0121],
        [-0.0443, -0.1490,  0.1176,  0.1602, -0.0490, -0.0076, -0.0229,  0.1620,
          0.1359,  0.0756, -0.0765, -0.0848, -0.0910,  0.1396,  0.0738,  0.0119,
         -0.0610,  0.0386,  0.0939,  0.1564,  0.1361,  0.0242, -0.0160,  0.0799,
         -0.0006,  0.0165, -0.0987,  0.1005,  0.0785, -0.0215, -0.1626, -0.1504],
        [-0.0038, -0.1676,  0.0911, -0.0048, -0.1585, -0.1180, -0.1762, -0.0626,
         -0.0633,  0.1387,  0.0924,  0.0293, -0.1513, -0.1745, -0.0132,  0.0925,
         -0.0301,  0.1478,  0.1370,  0.0393, -0.0458,  0.1255, -0.0038,  0.0136,
         -0.0829,  0.0366, -0.1053, -0.1208,  0.1067, -0.0924,  0.1058,  0.0190]],
       device='cuda:0')), ('mlp.2.bias', tensor([-8.4202e-02,  1.3252e-01, -8.5800e-02,  1.7315e-01, -2.2539e-02,
        -2.6598e-02, -1.2834e-01,  9.5273e-05, -2.7217e-02, -1.1596e-01,
         1.6425e-01,  5.6536e-02,  1.6137e-01,  1.4914e-03, -1.4413e-01,
         1.1077e-01], device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2130, -0.0476,  0.1654, -0.1018, -0.2357,  0.1980,  0.1219, -0.2193,
          0.1428,  0.1994, -0.2162,  0.2334, -0.2207,  0.0680,  0.2500, -0.0902],
        [ 0.0554,  0.1676, -0.1744, -0.0736,  0.0758, -0.1850, -0.2385, -0.1085,
          0.1376,  0.1556,  0.2143, -0.0860,  0.2397,  0.0594,  0.1199, -0.0892],
        [-0.0003,  0.1540, -0.0962,  0.2275,  0.0234,  0.1055,  0.0875,  0.1551,
         -0.0699, -0.1426,  0.0418, -0.0707,  0.0758,  0.1987,  0.0156, -0.1581],
        [-0.2461,  0.0463,  0.1228, -0.0038,  0.0238, -0.2398, -0.0497,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1046, -0.1646, -0.0257,  0.1715, -0.2470],
        [-0.2085,  0.1439, -0.1653, -0.1318,  0.0759, -0.2306,  0.0226, -0.0703,
          0.2100, -0.1001, -0.2099,  0.1750, -0.0495,  0.0709,  0.2499, -0.0276],
        [-0.2209, -0.1748, -0.0991, -0.1453, -0.2085, -0.0349, -0.2149,  0.2137,
         -0.0346, -0.1238,  0.2341,  0.0151, -0.0713,  0.2113, -0.1499,  0.2304],
        [ 0.1452, -0.1827, -0.2222,  0.0023, -0.1571, -0.1347,  0.1619, -0.1139,
          0.1169,  0.2049,  0.1867,  0.1499, -0.0110,  0.1101,  0.1485,  0.0613],
        [-0.0011, -0.0209,  0.2446,  0.0206, -0.1037, -0.0599, -0.1849, -0.1601,
          0.2493, -0.1098, -0.1719, -0.0450, -0.1860,  0.0670,  0.2163, -0.1918]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0506, -0.1277,  0.1218, -0.1696,  0.0766, -0.1781,  0.2175, -0.0035],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0637, -0.0103, -0.1172,  0.0769,  0.1036,  0.0480, -0.0434,  0.0517,
          0.1424,  0.0194, -0.0146,  0.0895,  0.0259, -0.0078, -0.1180, -0.0497,
         -0.0710, -0.1731,  0.1979, -0.1863,  0.0232, -0.0269, -0.1217,  0.1526]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.0947], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6884, -0.6259, -0.8649,  ..., -0.9835, -1.3057,  0.1658],
        [ 1.4824,  0.7264,  0.5567,  ...,  0.4805, -0.1934,  1.5496],
        [ 1.2268, -1.3320,  2.1211,  ..., -0.0150, -0.3441, -0.3145],
        ...,
        [-1.2595, -0.4466, -1.6423,  ..., -0.3732, -0.1758,  2.0200],
        [ 1.0586, -0.5972,  2.2993,  ..., -2.0499, -0.1055,  1.5847],
        [ 1.3459, -2.1517, -0.2580,  ..., -0.9281, -1.1259,  0.1476]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2260,  0.3239, -1.4835,  ...,  0.0782,  0.2290,  0.6419],
        [ 0.0624,  0.7477,  0.1415,  ..., -0.0763,  1.4338,  0.2667],
        [ 1.4017,  0.6262,  1.9315,  ...,  0.0536, -2.1364,  1.7344],
        ...,
        [-0.4230,  0.3372,  0.3638,  ..., -0.9575,  0.7074, -2.7619],
        [ 0.6816, -1.1919, -1.7636,  ...,  0.8847,  0.0484,  0.5070],
        [ 0.7305,  0.7138, -0.3874,  ..., -2.7139,  0.1853, -0.3358]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1753,  0.1048,  0.1654,  ..., -0.0543, -0.1649, -0.0058],
        [-0.0185,  0.0555, -0.0442,  ..., -0.0636,  0.1656, -0.1079],
        [ 0.1380,  0.0706, -0.1204,  ..., -0.1294, -0.0427,  0.0864],
        ...,
        [-0.0744,  0.1144,  0.1028,  ..., -0.1367,  0.1391, -0.1683],
        [ 0.0013,  0.0501, -0.1533,  ...,  0.1127, -0.0367,  0.0306],
        [-0.1126,  0.0417,  0.1795,  ...,  0.0564,  0.0610,  0.1328]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1409,  0.0203, -0.0987, -0.0520,  0.1321, -0.0176,  0.0211,  0.0211,
        -0.0903, -0.1195, -0.0709, -0.1681, -0.0965,  0.0180, -0.0490,  0.1187,
        -0.0985, -0.0958, -0.1551,  0.1531,  0.1393,  0.1658,  0.0287, -0.0092,
         0.0815, -0.0495,  0.0183,  0.0378,  0.0637, -0.0595,  0.1001, -0.1391],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 0.1560, -0.1084,  0.0131,  0.0678,  0.0706,  0.1415, -0.1368,  0.1410,
          0.1094, -0.1265,  0.1640, -0.1050,  0.0645,  0.1307, -0.0359,  0.1811,
         -0.0613,  0.0784,  0.1387,  0.1772, -0.0737,  0.1554,  0.1556,  0.0867,
          0.0872, -0.0820,  0.1357, -0.0880,  0.0993,  0.0478, -0.0529, -0.0302],
        [-0.1368, -0.1295,  0.0148,  0.0107, -0.1616,  0.1117, -0.1110, -0.0937,
         -0.0051,  0.0587,  0.0882, -0.0165,  0.1645,  0.0583, -0.0305,  0.1307,
         -0.1823,  0.0239,  0.1077,  0.1524, -0.1317, -0.0187,  0.0329,  0.1447,
         -0.1245, -0.1558, -0.0099,  0.1503,  0.1483, -0.0167, -0.1246,  0.0894],
        [ 0.0606,  0.0984, -0.1382, -0.1250,  0.0193,  0.0382, -0.0736,  0.0703,
         -0.0882,  0.0229, -0.0035, -0.0163, -0.1037,  0.0005,  0.0770,  0.0044,
          0.0980, -0.1521, -0.0142, -0.1492,  0.0389,  0.0461, -0.0352,  0.0468,
          0.0603, -0.1152, -0.1781, -0.1601, -0.1145, -0.0059,  0.0876, -0.1407],
        [ 0.0205,  0.0315, -0.0596,  0.0851,  0.0738,  0.0192, -0.1740,  0.1361,
         -0.0460, -0.1515, -0.1263,  0.0680,  0.1224, -0.0863, -0.1760, -0.1676,
          0.0964,  0.1485, -0.0769,  0.1151,  0.1061,  0.0658,  0.0729,  0.1456,
          0.0988, -0.0714,  0.0181, -0.0582,  0.0660, -0.0723, -0.1050, -0.0882],
        [ 0.0778,  0.1077, -0.1167,  0.1007, -0.1608,  0.1492, -0.0643,  0.0394,
         -0.1233,  0.1163, -0.1314, -0.0692,  0.1242, -0.1074, -0.1776, -0.0636,
         -0.0940,  0.0380, -0.0547, -0.0151, -0.0498,  0.1038, -0.0134, -0.0714,
         -0.0252,  0.0159, -0.1348,  0.0904, -0.1535, -0.0009,  0.0466, -0.1648],
        [ 0.1052, -0.0984,  0.0844,  0.1489, -0.1157,  0.0333,  0.0882, -0.0170,
          0.0371,  0.1000,  0.0104,  0.0619,  0.1441,  0.0167,  0.0216, -0.1697,
          0.1672,  0.0729,  0.0852, -0.1463,  0.0428,  0.0890, -0.0830,  0.0705,
         -0.1010, -0.0786, -0.1262, -0.1696, -0.1145,  0.0042, -0.1321, -0.1407],
        [-0.1436,  0.1719,  0.1069, -0.1480, -0.1703, -0.1138,  0.1567, -0.0529,
          0.0296,  0.0339, -0.1022, -0.1695,  0.0957,  0.1294, -0.1676,  0.0590,
          0.0335,  0.0353, -0.0891,  0.1164,  0.0360,  0.0057, -0.0965, -0.0726,
          0.1293, -0.0090,  0.1476, -0.1677, -0.1125,  0.1528, -0.1261,  0.0879],
        [-0.0891, -0.0163, -0.1417,  0.0270, -0.0764,  0.1099, -0.1489, -0.1189,
          0.0411, -0.1016, -0.1135,  0.0707, -0.0505,  0.1480, -0.0118,  0.0574,
          0.0180,  0.0138,  0.1400,  0.1006,  0.0936, -0.0175, -0.0470,  0.0980,
         -0.0594, -0.1087,  0.0404,  0.0848, -0.0234,  0.1608,  0.0885,  0.0107],
        [ 0.1105,  0.1248,  0.0873,  0.1802,  0.0343,  0.1517,  0.0320,  0.0769,
          0.1399, -0.0930, -0.1043, -0.0897, -0.0803, -0.0383, -0.0405, -0.0354,
          0.1091, -0.0063,  0.1804, -0.0565, -0.0402,  0.0726,  0.0048,  0.0551,
          0.0583,  0.0305, -0.1030, -0.0995, -0.0773, -0.0243, -0.0998, -0.1120],
        [-0.1573,  0.0178,  0.0438, -0.1255,  0.0388, -0.0281,  0.0710, -0.0441,
         -0.1362, -0.0225, -0.0882,  0.0823,  0.0317,  0.0628,  0.0361,  0.1106,
         -0.0792,  0.0017, -0.0599,  0.1775,  0.1713, -0.0691, -0.0903,  0.1490,
         -0.1183,  0.0370, -0.1112,  0.0572,  0.0192,  0.1038,  0.0134,  0.1228],
        [ 0.1046, -0.1654,  0.0351,  0.1111, -0.0802, -0.1071, -0.1011, -0.0203,
          0.0706, -0.0762, -0.0764, -0.0173,  0.1688,  0.1470,  0.0206,  0.0709,
         -0.0509, -0.0771,  0.0555,  0.0155, -0.0904,  0.1285,  0.0670, -0.1437,
         -0.0227,  0.1615, -0.1535, -0.1391, -0.0013, -0.0799,  0.1814,  0.1833],
        [ 0.0917,  0.0279, -0.1295,  0.1380, -0.0769,  0.0735,  0.1874,  0.0259,
          0.0450, -0.0633,  0.1638, -0.0330, -0.1321,  0.0789,  0.0985, -0.0170,
         -0.0944,  0.1402,  0.0492,  0.0110, -0.1512, -0.1462, -0.0012, -0.0883,
         -0.0464, -0.1306,  0.0156, -0.0978,  0.0783,  0.1714, -0.1627,  0.0018],
        [ 0.1308,  0.1507,  0.0878,  0.0586, -0.0733,  0.1460, -0.0118,  0.1628,
          0.1586,  0.0692,  0.0337, -0.0390, -0.1382,  0.0197,  0.0667, -0.0288,
          0.1651,  0.0573,  0.0198, -0.0999, -0.0812, -0.0178,  0.1901,  0.1075,
          0.1680, -0.0671,  0.0288,  0.0350,  0.0689,  0.0366, -0.1203, -0.0042],
        [ 0.0709, -0.1752,  0.0876,  0.0107,  0.1137,  0.0141, -0.1001,  0.1688,
         -0.1218,  0.0217,  0.0153,  0.0022,  0.0989,  0.0312,  0.0496, -0.1165,
          0.1182,  0.0302, -0.0785,  0.1070, -0.0471,  0.0990,  0.1172, -0.0404,
          0.0092,  0.1690, -0.1342,  0.0148, -0.1635,  0.0332, -0.0943,  0.0071],
        [-0.0281, -0.1398,  0.1355,  0.1794, -0.0328,  0.0056, -0.0052,  0.1788,
          0.1537,  0.0904, -0.0588, -0.0745, -0.0799,  0.1573,  0.0911,  0.0295,
         -0.0462,  0.0523,  0.1075,  0.1750,  0.1510,  0.0413,  0.0007,  0.0920,
          0.0173,  0.0329, -0.0897,  0.1142,  0.0982, -0.0077, -0.1479, -0.1336],
        [ 0.0092, -0.1565,  0.1061,  0.0112, -0.1441, -0.1065, -0.1618, -0.0478,
         -0.0491,  0.1519,  0.1073,  0.0378, -0.1404, -0.1599,  0.0006,  0.1073,
         -0.0184,  0.1587,  0.1485,  0.0539, -0.0329,  0.1411,  0.0102,  0.0237,
         -0.0681,  0.0502, -0.0969, -0.1075,  0.1233, -0.0806,  0.1206,  0.0332]],
       device='cuda:0')), ('mlp.2.bias', tensor([-0.0645,  0.1205, -0.0907,  0.1588, -0.0280, -0.0375, -0.1292, -0.0135,
        -0.0098, -0.0999,  0.1839,  0.0754,  0.1741, -0.0048, -0.1247,  0.1270],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2269, -0.0360,  0.1656, -0.0899, -0.2368,  0.2026,  0.1188, -0.2159,
          0.1563,  0.2071, -0.2023,  0.2474, -0.2060,  0.0819,  0.2648, -0.0776],
        [ 0.0754,  0.1842, -0.1716, -0.0590,  0.0809, -0.1774, -0.2371, -0.0981,
          0.1539,  0.1694,  0.2341, -0.0683,  0.2595,  0.0775,  0.1394, -0.0695],
        [-0.0171,  0.1399, -0.1002,  0.2146,  0.0176,  0.0963,  0.0827,  0.1431,
         -0.0848, -0.1552,  0.0242, -0.0867,  0.0595,  0.1843, -0.0012, -0.1750],
        [-0.2460,  0.0462,  0.1228, -0.0038,  0.0238, -0.2398, -0.0497,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1046, -0.1645, -0.0257,  0.1715, -0.2469],
        [-0.2194,  0.1339, -0.1684, -0.1416,  0.0738, -0.2383,  0.0188, -0.0791,
          0.2019, -0.1090, -0.2219,  0.1633, -0.0609,  0.0617,  0.2386, -0.0377],
        [-0.2162, -0.1722, -0.0986, -0.1409, -0.2048, -0.0346, -0.2146,  0.2147,
         -0.0311, -0.1229,  0.2401,  0.0167, -0.0662,  0.2164, -0.1475,  0.2364],
        [ 0.1660, -0.1656, -0.2183,  0.0162, -0.1515, -0.1256,  0.1656, -0.1021,
          0.1353,  0.2202,  0.2081,  0.1699,  0.0093,  0.1286,  0.1694,  0.0821],
        [-0.0059, -0.0233,  0.2437,  0.0160, -0.1037, -0.0619, -0.1852, -0.1625,
          0.2442, -0.1117, -0.1764, -0.0486, -0.1910,  0.0622,  0.2115, -0.1942]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0367, -0.1091,  0.1058, -0.1696,  0.0648, -0.1722,  0.2362, -0.0085],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0637, -0.0098, -0.1154,  0.0778,  0.1024,  0.0470, -0.0447,  0.0491,
          0.1372,  0.0206, -0.0142,  0.0908,  0.0270, -0.0064, -0.1122, -0.0491,
         -0.0850, -0.1936,  0.1840, -0.1862,  0.0097, -0.0332, -0.1426,  0.1479]],

epoch: 2, loss: 0.58, time: 3.76:   0%|             | 2/400 [00:09<29:28,  4.44s/it]
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6884, -0.6259, -0.8649,  ..., -0.9835, -1.3057,  0.1658],
        [ 1.4824,  0.7264,  0.5567,  ...,  0.4805, -0.1934,  1.5496],
        [ 1.2268, -1.3320,  2.1211,  ..., -0.0150, -0.3441, -0.3145],
        ...,
        [-1.2595, -0.4466, -1.6423,  ..., -0.3732, -0.1758,  2.0200],
        [ 1.0586, -0.5972,  2.2993,  ..., -2.0499, -0.1055,  1.5847],
        [ 1.3459, -2.1517, -0.2580,  ..., -0.9281, -1.1259,  0.1476]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2260,  0.3239, -1.4835,  ...,  0.0782,  0.2290,  0.6419],
        [ 0.0624,  0.7477,  0.1415,  ..., -0.0763,  1.4338,  0.2667],
        [ 1.4017,  0.6262,  1.9315,  ...,  0.0536, -2.1364,  1.7344],
        ...,
        [-0.4230,  0.3372,  0.3638,  ..., -0.9575,  0.7074, -2.7619],
        [ 0.6816, -1.1919, -1.7636,  ...,  0.8847,  0.0484,  0.5070],
        [ 0.7305,  0.7138, -0.3874,  ..., -2.7139,  0.1853, -0.3358]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1753,  0.1048,  0.1654,  ..., -0.0543, -0.1649, -0.0058],
        [-0.0185,  0.0555, -0.0442,  ..., -0.0636,  0.1656, -0.1079],
        [ 0.1380,  0.0706, -0.1204,  ..., -0.1294, -0.0427,  0.0864],
        ...,
        [-0.0744,  0.1144,  0.1028,  ..., -0.1367,  0.1391, -0.1683],
        [ 0.0013,  0.0501, -0.1533,  ...,  0.1127, -0.0367,  0.0306],
        [-0.1126,  0.0417,  0.1795,  ...,  0.0564,  0.0610,  0.1328]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1409,  0.0203, -0.0987, -0.0520,  0.1321, -0.0176,  0.0211,  0.0211,
        -0.0903, -0.1195, -0.0709, -0.1681, -0.0965,  0.0180, -0.0490,  0.1187,
        -0.0985, -0.0958, -0.1551,  0.1531,  0.1393,  0.1658,  0.0287, -0.0092,
         0.0815, -0.0495,  0.0183,  0.0378,  0.0637, -0.0595,  0.1001, -0.1391],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 0.1560, -0.1084,  0.0131,  0.0678,  0.0706,  0.1415, -0.1368,  0.1410,
          0.1094, -0.1265,  0.1640, -0.1050,  0.0645,  0.1307, -0.0359,  0.1811,
         -0.0613,  0.0784,  0.1387,  0.1772, -0.0737,  0.1554,  0.1556,  0.0867,
          0.0872, -0.0820,  0.1357, -0.0880,  0.0993,  0.0478, -0.0529, -0.0302],
        [-0.1368, -0.1295,  0.0148,  0.0107, -0.1616,  0.1117, -0.1110, -0.0937,
         -0.0051,  0.0587,  0.0882, -0.0165,  0.1645,  0.0583, -0.0305,  0.1307,
         -0.1823,  0.0239,  0.1077,  0.1524, -0.1317, -0.0187,  0.0329,  0.1447,
         -0.1245, -0.1558, -0.0099,  0.1503,  0.1483, -0.0167, -0.1246,  0.0894],
        [ 0.0606,  0.0984, -0.1382, -0.1250,  0.0193,  0.0382, -0.0736,  0.0703,
         -0.0882,  0.0229, -0.0035, -0.0163, -0.1037,  0.0005,  0.0770,  0.0044,
          0.0980, -0.1521, -0.0142, -0.1492,  0.0389,  0.0461, -0.0352,  0.0468,
          0.0603, -0.1152, -0.1781, -0.1601, -0.1145, -0.0059,  0.0876, -0.1407],
        [ 0.0205,  0.0315, -0.0596,  0.0851,  0.0738,  0.0192, -0.1740,  0.1361,
         -0.0460, -0.1515, -0.1263,  0.0680,  0.1224, -0.0863, -0.1760, -0.1676,
          0.0964,  0.1485, -0.0769,  0.1151,  0.1061,  0.0658,  0.0729,  0.1456,
          0.0988, -0.0714,  0.0181, -0.0582,  0.0660, -0.0723, -0.1050, -0.0882],
        [ 0.0778,  0.1077, -0.1167,  0.1007, -0.1608,  0.1492, -0.0643,  0.0394,
         -0.1233,  0.1163, -0.1314, -0.0692,  0.1242, -0.1074, -0.1776, -0.0636,
         -0.0940,  0.0380, -0.0547, -0.0151, -0.0498,  0.1038, -0.0134, -0.0714,
         -0.0252,  0.0159, -0.1348,  0.0904, -0.1535, -0.0009,  0.0466, -0.1648],
        [ 0.1052, -0.0984,  0.0844,  0.1489, -0.1157,  0.0333,  0.0882, -0.0170,
          0.0371,  0.1000,  0.0104,  0.0619,  0.1441,  0.0167,  0.0216, -0.1697,
          0.1672,  0.0729,  0.0852, -0.1463,  0.0428,  0.0890, -0.0830,  0.0705,
         -0.1010, -0.0786, -0.1262, -0.1696, -0.1145,  0.0042, -0.1321, -0.1407],
        [-0.1436,  0.1719,  0.1069, -0.1480, -0.1703, -0.1138,  0.1567, -0.0529,
          0.0296,  0.0339, -0.1022, -0.1695,  0.0957,  0.1294, -0.1676,  0.0590,
          0.0335,  0.0353, -0.0891,  0.1164,  0.0360,  0.0057, -0.0965, -0.0726,
          0.1293, -0.0090,  0.1476, -0.1677, -0.1125,  0.1528, -0.1261,  0.0879],
        [-0.0891, -0.0163, -0.1417,  0.0270, -0.0764,  0.1099, -0.1489, -0.1189,
          0.0411, -0.1016, -0.1135,  0.0707, -0.0505,  0.1480, -0.0118,  0.0574,
          0.0180,  0.0138,  0.1400,  0.1006,  0.0936, -0.0175, -0.0470,  0.0980,
         -0.0594, -0.1087,  0.0404,  0.0848, -0.0234,  0.1608,  0.0885,  0.0107],
        [ 0.1105,  0.1248,  0.0873,  0.1802,  0.0343,  0.1517,  0.0320,  0.0769,
          0.1399, -0.0930, -0.1043, -0.0897, -0.0803, -0.0383, -0.0405, -0.0354,
          0.1091, -0.0063,  0.1804, -0.0565, -0.0402,  0.0726,  0.0048,  0.0551,
          0.0583,  0.0305, -0.1030, -0.0995, -0.0773, -0.0243, -0.0998, -0.1120],
        [-0.1573,  0.0178,  0.0438, -0.1255,  0.0388, -0.0281,  0.0710, -0.0441,
         -0.1362, -0.0225, -0.0882,  0.0823,  0.0317,  0.0628,  0.0361,  0.1106,
         -0.0792,  0.0017, -0.0599,  0.1775,  0.1713, -0.0691, -0.0903,  0.1490,
         -0.1183,  0.0370, -0.1112,  0.0572,  0.0192,  0.1038,  0.0134,  0.1228],
        [ 0.1046, -0.1654,  0.0351,  0.1111, -0.0802, -0.1071, -0.1011, -0.0203,
          0.0706, -0.0762, -0.0764, -0.0173,  0.1688,  0.1470,  0.0206,  0.0709,
         -0.0509, -0.0771,  0.0555,  0.0155, -0.0904,  0.1285,  0.0670, -0.1437,
         -0.0227,  0.1615, -0.1535, -0.1391, -0.0013, -0.0799,  0.1814,  0.1833],
        [ 0.0917,  0.0279, -0.1295,  0.1380, -0.0769,  0.0735,  0.1874,  0.0259,
          0.0450, -0.0633,  0.1638, -0.0330, -0.1321,  0.0789,  0.0985, -0.0170,
         -0.0944,  0.1402,  0.0492,  0.0110, -0.1512, -0.1462, -0.0012, -0.0883,
         -0.0464, -0.1306,  0.0156, -0.0978,  0.0783,  0.1714, -0.1627,  0.0018],
        [ 0.1308,  0.1507,  0.0878,  0.0586, -0.0733,  0.1460, -0.0118,  0.1628,
          0.1586,  0.0692,  0.0337, -0.0390, -0.1382,  0.0197,  0.0667, -0.0288,
          0.1651,  0.0573,  0.0198, -0.0999, -0.0812, -0.0178,  0.1901,  0.1075,
          0.1680, -0.0671,  0.0288,  0.0350,  0.0689,  0.0366, -0.1203, -0.0042],
        [ 0.0709, -0.1752,  0.0876,  0.0107,  0.1137,  0.0141, -0.1001,  0.1688,
         -0.1218,  0.0217,  0.0153,  0.0022,  0.0989,  0.0312,  0.0496, -0.1165,
          0.1182,  0.0302, -0.0785,  0.1070, -0.0471,  0.0990,  0.1172, -0.0404,
          0.0092,  0.1690, -0.1342,  0.0148, -0.1635,  0.0332, -0.0943,  0.0071],
        [-0.0281, -0.1398,  0.1355,  0.1794, -0.0328,  0.0056, -0.0052,  0.1788,
          0.1537,  0.0904, -0.0588, -0.0745, -0.0799,  0.1573,  0.0911,  0.0295,
         -0.0462,  0.0523,  0.1075,  0.1750,  0.1510,  0.0413,  0.0007,  0.0920,
          0.0173,  0.0329, -0.0897,  0.1142,  0.0982, -0.0077, -0.1479, -0.1336],
        [ 0.0092, -0.1565,  0.1061,  0.0112, -0.1441, -0.1065, -0.1618, -0.0478,
         -0.0491,  0.1519,  0.1073,  0.0378, -0.1404, -0.1599,  0.0006,  0.1073,
         -0.0184,  0.1587,  0.1485,  0.0539, -0.0329,  0.1411,  0.0102,  0.0237,
         -0.0681,  0.0502, -0.0969, -0.1075,  0.1233, -0.0806,  0.1206,  0.0332]],
       device='cuda:0')), ('mlp.2.bias', tensor([-0.0645,  0.1205, -0.0907,  0.1588, -0.0280, -0.0375, -0.1292, -0.0135,
        -0.0098, -0.0999,  0.1839,  0.0754,  0.1741, -0.0048, -0.1247,  0.1270],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2269, -0.0360,  0.1656, -0.0899, -0.2368,  0.2026,  0.1188, -0.2159,
          0.1563,  0.2071, -0.2023,  0.2474, -0.2060,  0.0819,  0.2648, -0.0776],
        [ 0.0754,  0.1842, -0.1716, -0.0590,  0.0809, -0.1774, -0.2371, -0.0981,
          0.1539,  0.1694,  0.2341, -0.0683,  0.2595,  0.0775,  0.1394, -0.0695],
        [-0.0171,  0.1399, -0.1002,  0.2146,  0.0176,  0.0963,  0.0827,  0.1431,
         -0.0848, -0.1552,  0.0242, -0.0867,  0.0595,  0.1843, -0.0012, -0.1750],
        [-0.2460,  0.0462,  0.1228, -0.0038,  0.0238, -0.2398, -0.0497,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1046, -0.1645, -0.0257,  0.1715, -0.2469],
        [-0.2194,  0.1339, -0.1684, -0.1416,  0.0738, -0.2383,  0.0188, -0.0791,
          0.2019, -0.1090, -0.2219,  0.1633, -0.0609,  0.0617,  0.2386, -0.0377],
        [-0.2162, -0.1722, -0.0986, -0.1409, -0.2048, -0.0346, -0.2146,  0.2147,
         -0.0311, -0.1229,  0.2401,  0.0167, -0.0662,  0.2164, -0.1475,  0.2364],
        [ 0.1660, -0.1656, -0.2183,  0.0162, -0.1515, -0.1256,  0.1656, -0.1021,
          0.1353,  0.2202,  0.2081,  0.1699,  0.0093,  0.1286,  0.1694,  0.0821],
        [-0.0059, -0.0233,  0.2437,  0.0160, -0.1037, -0.0619, -0.1852, -0.1625,
          0.2442, -0.1117, -0.1764, -0.0486, -0.1910,  0.0622,  0.2115, -0.1942]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0367, -0.1091,  0.1058, -0.1696,  0.0648, -0.1722,  0.2362, -0.0085],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0637, -0.0098, -0.1154,  0.0778,  0.1024,  0.0470, -0.0447,  0.0491,
          0.1372,  0.0206, -0.0142,  0.0908,  0.0270, -0.0064, -0.1122, -0.0491,
         -0.0850, -0.1936,  0.1840, -0.1862,  0.0097, -0.0332, -0.1426,  0.1479]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.1130], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6883, -0.6257, -0.8648,  ..., -0.9833, -1.3055,  0.1657],
        [ 1.4821,  0.7262,  0.5566,  ...,  0.4804, -0.1934,  1.5493],
        [ 1.2266, -1.3317,  2.1206,  ..., -0.0150, -0.3441, -0.3144],
        ...,
        [-1.2600, -0.4455, -1.6411,  ..., -0.3739, -0.1765,  2.0204],
        [ 1.0584, -0.5971,  2.2988,  ..., -2.0495, -0.1055,  1.5844],
        [ 1.3456, -2.1513, -0.2580,  ..., -0.9279, -1.1257,  0.1475]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2246,  0.3215, -1.4849,  ...,  0.0780,  0.2291,  0.6405],
        [ 0.0635,  0.7459,  0.1406,  ..., -0.0778,  1.4347,  0.2662],
        [ 1.4018,  0.6252,  1.9306,  ...,  0.0527, -2.1350,  1.7337],
        ...,
        [-0.4221,  0.3363,  0.3634,  ..., -0.9579,  0.7080, -2.7622],
        [ 0.6821, -1.1923, -1.7629,  ...,  0.8841,  0.0490,  0.5062],
        [ 0.7314,  0.7126, -0.3874,  ..., -2.7132,  0.1862, -0.3367]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1753,  0.1043,  0.1644,  ..., -0.0530, -0.1717,  0.0021],
        [-0.0189,  0.0557, -0.0439,  ..., -0.0608,  0.1616, -0.1079],
        [ 0.1385,  0.0702, -0.1223,  ..., -0.1271, -0.0433,  0.0925],
        ...,
        [-0.0756,  0.1153,  0.1011,  ..., -0.1383,  0.1450, -0.1684],
        [-0.0002,  0.0494, -0.1516,  ...,  0.1105, -0.0436,  0.0327],
        [-0.1117,  0.0424,  0.1798,  ...,  0.0644,  0.0657,  0.1392]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1264,  0.0111, -0.0833, -0.0362,  0.1294, -0.0051,  0.0303,  0.0367,
        -0.0760, -0.1145, -0.0571, -0.1802, -0.1043,  0.0337, -0.0351,  0.1330,
        -0.1065, -0.0835, -0.1419,  0.1693,  0.1342,  0.1812,  0.0430,  0.0016,
         0.0947, -0.0341,  0.0101,  0.0269,  0.0794, -0.0487,  0.0911, -0.1264],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.7066e-01, -1.0038e-01,  2.9266e-02,  8.4086e-02,  8.5824e-02,
          1.5607e-01, -1.2137e-01,  1.5670e-01,  1.2393e-01, -1.1240e-01,
          1.7981e-01, -9.3812e-02,  7.6619e-02,  1.4624e-01, -2.1724e-02,
          1.9649e-01, -4.6608e-02,  9.2320e-02,  1.5252e-01,  1.9349e-01,
         -6.0247e-02,  1.7147e-01,  1.7012e-01,  1.0203e-01,  1.0235e-01,
         -6.5995e-02,  1.4121e-01, -7.5437e-02,  1.1566e-01,  6.0674e-02,
         -3.9563e-02, -1.5213e-02],
        [-1.4193e-01, -1.3751e-01,  9.4560e-03,  4.8003e-03, -1.6903e-01,
          1.0702e-01, -1.1821e-01, -1.0062e-01, -1.0265e-02,  5.2695e-02,
          8.2046e-02, -2.5073e-02,  1.5699e-01,  5.1275e-02, -3.6282e-02,
          1.2589e-01, -1.8827e-01,  1.8725e-02,  1.0317e-01,  1.4571e-01,
         -1.3781e-01, -2.5901e-02,  2.6606e-02,  1.3835e-01, -1.3037e-01,
         -1.6181e-01, -1.6874e-02,  1.4212e-01,  1.4175e-01, -2.2466e-02,
         -1.3238e-01,  8.2926e-02],
        [ 6.0123e-02,  9.7157e-02, -1.3859e-01, -1.2606e-01,  1.7655e-02,
          3.8628e-02, -7.5349e-02,  6.9625e-02, -8.8551e-02,  2.2676e-02,
         -3.0538e-03, -1.6539e-02, -1.0473e-01,  1.2673e-04,  7.5823e-02,
          2.6664e-03,  9.7324e-02, -1.5193e-01, -1.4804e-02, -1.4945e-01,
          3.8081e-02,  4.6042e-02, -3.4966e-02,  4.4445e-02,  5.8908e-02,
         -1.1554e-01, -1.7795e-01, -1.6046e-01, -1.1508e-01, -6.8078e-03,
          8.7459e-02, -1.4050e-01],
        [ 9.0457e-03,  2.3500e-02, -6.8989e-02,  7.2417e-02,  6.2005e-02,
          1.0792e-02, -1.8583e-01,  1.2321e-01, -5.6586e-02, -1.6223e-01,
         -1.3780e-01,  5.8643e-02,  1.1329e-01, -9.8804e-02, -1.8588e-01,
         -1.7888e-01,  8.4643e-02,  1.3635e-01, -8.4074e-02,  1.0228e-01,
          9.5731e-02,  5.4969e-02,  6.3056e-02,  1.3399e-01,  8.6994e-02,
         -8.4250e-02,  1.2479e-02, -6.7345e-02,  5.3276e-02, -8.1666e-02,
         -1.1630e-01, -9.8289e-02],
        [ 7.6726e-02,  1.0609e-01, -1.2079e-01,  9.6347e-02, -1.6490e-01,
          1.4344e-01, -6.5608e-02,  3.5294e-02, -1.2422e-01,  1.1127e-01,
         -1.3539e-01, -7.1931e-02,  1.2068e-01, -1.0978e-01, -1.8134e-01,
         -6.6196e-02, -9.9194e-02,  3.3956e-02, -5.7969e-02, -2.0608e-02,
         -5.1845e-02,  9.7472e-02, -1.8976e-02, -7.2415e-02, -3.0227e-02,
          9.4941e-03, -1.3663e-01,  8.9336e-02, -1.5849e-01, -3.9659e-03,
          3.9386e-02, -1.6545e-01],
        [ 9.8736e-02, -1.0135e-01,  8.0483e-02,  1.4409e-01, -1.2160e-01,
          3.1718e-02,  8.1993e-02, -2.0832e-02,  3.3260e-02,  9.8064e-02,
          5.2826e-03,  5.7418e-02,  1.4227e-01,  1.3816e-02,  1.6165e-02,
         -1.7414e-01,  1.6282e-01,  6.8825e-02,  8.3688e-02, -1.5261e-01,
          3.9090e-02,  8.5820e-02, -8.6294e-02,  6.2339e-02, -1.0576e-01,
         -8.3823e-02, -1.2698e-01, -1.7246e-01, -1.2040e-01,  2.2769e-03,
         -1.3626e-01, -1.4425e-01],
        [-1.4552e-01,  1.6769e-01,  1.0517e-01, -1.5040e-01, -1.7494e-01,
         -1.1363e-01,  1.5687e-01, -5.3472e-02,  2.6388e-02,  3.2689e-02,
         -1.0548e-01, -1.7305e-01,  9.1144e-02,  1.2950e-01, -1.6765e-01,
          5.5216e-02,  3.2503e-02,  3.4163e-02, -8.9061e-02,  1.1428e-01,
          3.3625e-02,  2.1198e-03, -9.6732e-02, -7.4457e-02,  1.2784e-01,
         -7.5608e-03,  1.4791e-01, -1.6718e-01, -1.1567e-01,  1.5114e-01,
         -1.2707e-01,  8.4511e-02],
        [-9.5872e-02, -2.3334e-02, -1.4777e-01,  1.9431e-02, -8.5046e-02,
          1.0227e-01, -1.5656e-01, -1.2754e-01,  3.3429e-02, -1.0987e-01,
         -1.2200e-01,  6.1825e-02, -5.8239e-02,  1.4039e-01, -1.8679e-02,
          4.7515e-02,  1.0643e-02,  6.2715e-03,  1.3406e-01,  9.1758e-02,
          8.4880e-02, -2.6963e-02, -5.5850e-02,  9.2491e-02, -6.7984e-02,
         -1.1605e-01,  3.7447e-02,  7.6795e-02, -3.2185e-02,  1.5383e-01,
          7.9743e-02,  3.2280e-03],
        [ 1.2479e-01,  1.3201e-01,  1.0308e-01,  1.9613e-01,  4.9309e-02,
          1.6590e-01,  4.6929e-02,  9.2095e-02,  1.5317e-01, -7.9247e-02,
         -8.8695e-02, -7.8737e-02, -6.9205e-02, -2.3368e-02, -2.7017e-02,
         -2.0757e-02,  1.2293e-01,  7.1831e-03,  1.9363e-01, -4.0391e-02,
         -2.7874e-02,  8.8306e-02,  1.8870e-02,  7.0143e-02,  7.3131e-02,
          4.6301e-02, -9.8248e-02, -8.8463e-02, -6.1051e-02, -1.2150e-02,
         -8.6517e-02, -9.9056e-02],
        [-1.4547e-01,  2.4465e-02,  5.5225e-02, -1.1132e-01,  5.2110e-02,
         -1.6814e-02,  8.4382e-02, -3.0662e-02, -1.2413e-01, -1.0808e-02,
         -7.4518e-02,  9.2480e-02,  4.2237e-02,  7.5964e-02,  4.7826e-02,
          1.2397e-01, -6.8021e-02,  1.3597e-02, -5.0767e-02,  1.9178e-01,
          1.8187e-01, -5.5865e-02, -7.7852e-02,  1.6154e-01, -1.0569e-01,
          5.0366e-02, -1.0842e-01,  6.8427e-02,  3.3889e-02,  1.1406e-01,
          2.3486e-02,  1.3618e-01],
        [ 1.1907e-01, -1.5798e-01,  5.1108e-02,  1.2711e-01, -6.5244e-02,
         -9.2670e-02, -8.5657e-02, -4.9079e-03,  8.5248e-02, -6.2233e-02,
         -6.0565e-02, -6.6028e-03,  1.8056e-01,  1.6278e-01,  3.4462e-02,
          8.6073e-02, -3.6658e-02, -6.3322e-02,  6.9182e-02,  3.1712e-02,
         -7.7157e-02,  1.4422e-01,  8.1411e-02, -1.2858e-01, -7.5362e-03,
          1.7727e-01, -1.4820e-01, -1.2681e-01,  1.5176e-02, -6.6841e-02,
          1.9405e-01,  1.9790e-01],
        [ 1.0627e-01,  3.5207e-02, -1.1356e-01,  1.5401e-01, -6.1790e-02,
          8.7698e-02,  2.0239e-01,  4.1192e-02,  5.8362e-02, -4.9348e-02,
          1.7940e-01, -2.1874e-02, -1.2016e-01,  9.4480e-02,  1.1240e-01,
         -2.1519e-03, -8.0149e-02,  1.5342e-01,  6.2767e-02,  2.7290e-02,
         -1.3780e-01, -1.3024e-01,  1.3266e-02, -7.2802e-02, -3.1193e-02,
         -1.1473e-01,  2.1212e-02, -8.5782e-02,  9.4506e-02,  1.8356e-01,
         -1.4993e-01,  1.6546e-02],
        [ 1.4517e-01,  1.5811e-01,  1.0393e-01,  7.4876e-02, -5.8173e-02,
          1.6046e-01,  3.5498e-03,  1.7833e-01,  1.7303e-01,  8.3152e-02,
          4.9701e-02, -2.8002e-02, -1.2618e-01,  3.5582e-02,  8.0804e-02,
         -1.3689e-02,  1.7928e-01,  7.1025e-02,  3.3538e-02, -8.3516e-02,
         -6.8076e-02, -2.0351e-03,  2.0454e-01,  1.2247e-01,  1.8319e-01,
         -5.1139e-02,  3.3884e-02,  4.7312e-02,  8.5490e-02,  4.9036e-02,
         -1.0757e-01,  1.0568e-02],
        [ 8.4134e-02, -1.7004e-01,  1.0263e-01,  2.6401e-02,  1.2865e-01,
          2.7143e-02, -8.5932e-02,  1.8393e-01, -1.0903e-01,  3.4631e-02,
          3.0939e-02,  1.1691e-02,  1.0985e-01,  4.6080e-02,  6.2972e-02,
         -1.0305e-01,  1.3090e-01,  4.2205e-02, -6.6172e-02,  1.2238e-01,
         -3.5968e-02,  1.1332e-01,  1.3106e-01, -2.6826e-02,  2.2857e-02,
          1.8361e-01, -1.2974e-01,  2.6217e-02, -1.4771e-01,  4.3920e-02,
         -8.3052e-02,  2.0472e-02],
        [-1.3498e-02, -1.3218e-01,  1.5165e-01,  1.9579e-01, -1.7428e-02,
          1.9777e-02,  1.0247e-02,  1.9414e-01,  1.6804e-01,  1.0461e-01,
         -4.2928e-02, -6.3101e-02, -6.8058e-02,  1.7324e-01,  1.0532e-01,
          4.4715e-02, -3.1452e-02,  6.6161e-02,  1.2118e-01,  1.9140e-01,
          1.6455e-01,  5.7251e-02,  1.4982e-02,  1.0718e-01,  3.2592e-02,
          4.8970e-02, -8.3988e-02,  1.2669e-01,  1.1462e-01,  4.3005e-03,
         -1.3436e-01, -1.1856e-01],
        [ 2.1605e-02, -1.4933e-01,  1.1960e-01,  2.5226e-02, -1.3083e-01,
         -9.4554e-02, -1.4934e-01, -3.4240e-02, -3.7406e-02,  1.6369e-01,
          1.2023e-01,  4.6637e-02, -1.3025e-01, -1.4641e-01,  1.1804e-02,
          1.1995e-01, -4.9851e-03,  1.7051e-01,  1.5970e-01,  6.7795e-02,
         -2.1917e-02,  1.5421e-01,  2.2180e-02,  3.6097e-02, -5.5036e-02,
          6.3972e-02, -9.1835e-02, -9.6631e-02,  1.3722e-01, -7.0138e-02,
          1.3226e-01,  4.5197e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0488,  0.1122, -0.0920,  0.1461, -0.0349, -0.0440, -0.1318, -0.0236,
         0.0059, -0.0856,  0.1992,  0.0912,  0.1895,  0.0102, -0.1088,  0.1405],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2437, -0.0210,  0.1666, -0.0756, -0.2365,  0.2042,  0.1172, -0.2091,
          0.1728,  0.2215, -0.1853,  0.2638, -0.1892,  0.0987,  0.2818, -0.0613],
        [ 0.0923,  0.1988, -0.1702, -0.0453,  0.0863, -0.1742, -0.2378, -0.0894,
          0.1710,  0.1844,  0.2509, -0.0515,  0.2761,  0.0944,  0.1565, -0.0528],
        [-0.0306,  0.1283, -0.1017,  0.2024,  0.0117,  0.0910,  0.0809,  0.1341,
         -0.0986, -0.1665,  0.0106, -0.1002,  0.0460,  0.1706, -0.0149, -0.1884],
        [-0.2460,  0.0462,  0.1228, -0.0038,  0.0238, -0.2397, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1045, -0.1645, -0.0257,  0.1715, -0.2469],
        [-0.2244,  0.1291, -0.1695, -0.1456,  0.0730, -0.2440,  0.0173, -0.0843,
          0.1981, -0.1125, -0.2267,  0.1584, -0.0659,  0.0570,  0.2333, -0.0416],
        [-0.2105, -0.1688, -0.0988, -0.1371, -0.2017, -0.0359, -0.2153,  0.2153,
         -0.0254, -0.1200,  0.2463,  0.0201, -0.0604,  0.2219, -0.1430,  0.2424],
        [ 0.1829, -0.1509, -0.2170,  0.0298, -0.1459, -0.1223,  0.1648, -0.0936,
          0.1525,  0.2353,  0.2250,  0.1866,  0.0259,  0.1456,  0.1864,  0.0988],
        [-0.0095, -0.0247,  0.2432,  0.0123, -0.1037, -0.0634, -0.1852, -0.1645,
          0.2405, -0.1144, -0.1801, -0.0520, -0.1946,  0.0584,  0.2078, -0.1962]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0209, -0.0938,  0.0928, -0.1695,  0.0588, -0.1662,  0.2515, -0.0121],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0618, -0.0080, -0.1115,  0.0777,  0.1013,  0.0481, -0.0458,  0.0470,
          0.1302,  0.0216, -0.0137,  0.0874,  0.0241, -0.0078, -0.1089, -0.0474,
         -0.1019, -0.2109,  0.1723, -0.1862, -0.0004, -0.0393, -0.1593,  0.1453]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.1280], device='cuda:0'))])
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6883, -0.6257, -0.8648,  ..., -0.9833, -1.3055,  0.1657],
        [ 1.4821,  0.7262,  0.5566,  ...,  0.4804, -0.1934,  1.5493],
        [ 1.2266, -1.3317,  2.1206,  ..., -0.0150, -0.3441, -0.3144],
        ...,
        [-1.2600, -0.4455, -1.6411,  ..., -0.3739, -0.1765,  2.0204],
        [ 1.0584, -0.5971,  2.2988,  ..., -2.0495, -0.1055,  1.5844],
        [ 1.3456, -2.1513, -0.2580,  ..., -0.9279, -1.1257,  0.1475]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2246,  0.3215, -1.4849,  ...,  0.0780,  0.2291,  0.6405],
        [ 0.0635,  0.7459,  0.1406,  ..., -0.0778,  1.4347,  0.2662],
        [ 1.4018,  0.6252,  1.9306,  ...,  0.0527, -2.1350,  1.7337],
        ...,
        [-0.4221,  0.3363,  0.3634,  ..., -0.9579,  0.7080, -2.7622],
        [ 0.6821, -1.1923, -1.7629,  ...,  0.8841,  0.0490,  0.5062],
        [ 0.7314,  0.7126, -0.3874,  ..., -2.7132,  0.1862, -0.3367]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1753,  0.1043,  0.1644,  ..., -0.0530, -0.1717,  0.0021],
        [-0.0189,  0.0557, -0.0439,  ..., -0.0608,  0.1616, -0.1079],
        [ 0.1385,  0.0702, -0.1223,  ..., -0.1271, -0.0433,  0.0925],
        ...,
        [-0.0756,  0.1153,  0.1011,  ..., -0.1383,  0.1450, -0.1684],
        [-0.0002,  0.0494, -0.1516,  ...,  0.1105, -0.0436,  0.0327],
        [-0.1117,  0.0424,  0.1798,  ...,  0.0644,  0.0657,  0.1392]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1264,  0.0111, -0.0833, -0.0362,  0.1294, -0.0051,  0.0303,  0.0367,
        -0.0760, -0.1145, -0.0571, -0.1802, -0.1043,  0.0337, -0.0351,  0.1330,
        -0.1065, -0.0835, -0.1419,  0.1693,  0.1342,  0.1812,  0.0430,  0.0016,
         0.0947, -0.0341,  0.0101,  0.0269,  0.0794, -0.0487,  0.0911, -0.1264],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.7066e-01, -1.0038e-01,  2.9266e-02,  8.4086e-02,  8.5824e-02,
          1.5607e-01, -1.2137e-01,  1.5670e-01,  1.2393e-01, -1.1240e-01,
          1.7981e-01, -9.3812e-02,  7.6619e-02,  1.4624e-01, -2.1724e-02,
          1.9649e-01, -4.6608e-02,  9.2320e-02,  1.5252e-01,  1.9349e-01,
         -6.0247e-02,  1.7147e-01,  1.7012e-01,  1.0203e-01,  1.0235e-01,
         -6.5995e-02,  1.4121e-01, -7.5437e-02,  1.1566e-01,  6.0674e-02,
         -3.9563e-02, -1.5213e-02],
        [-1.4193e-01, -1.3751e-01,  9.4560e-03,  4.8003e-03, -1.6903e-01,
          1.0702e-01, -1.1821e-01, -1.0062e-01, -1.0265e-02,  5.2695e-02,
          8.2046e-02, -2.5073e-02,  1.5699e-01,  5.1275e-02, -3.6282e-02,
          1.2589e-01, -1.8827e-01,  1.8725e-02,  1.0317e-01,  1.4571e-01,
         -1.3781e-01, -2.5901e-02,  2.6606e-02,  1.3835e-01, -1.3037e-01,
         -1.6181e-01, -1.6874e-02,  1.4212e-01,  1.4175e-01, -2.2466e-02,
         -1.3238e-01,  8.2926e-02],
        [ 6.0123e-02,  9.7157e-02, -1.3859e-01, -1.2606e-01,  1.7655e-02,
          3.8628e-02, -7.5349e-02,  6.9625e-02, -8.8551e-02,  2.2676e-02,
         -3.0538e-03, -1.6539e-02, -1.0473e-01,  1.2673e-04,  7.5823e-02,
          2.6664e-03,  9.7324e-02, -1.5193e-01, -1.4804e-02, -1.4945e-01,
          3.8081e-02,  4.6042e-02, -3.4966e-02,  4.4445e-02,  5.8908e-02,
         -1.1554e-01, -1.7795e-01, -1.6046e-01, -1.1508e-01, -6.8078e-03,
          8.7459e-02, -1.4050e-01],
        [ 9.0457e-03,  2.3500e-02, -6.8989e-02,  7.2417e-02,  6.2005e-02,
          1.0792e-02, -1.8583e-01,  1.2321e-01, -5.6586e-02, -1.6223e-01,
         -1.3780e-01,  5.8643e-02,  1.1329e-01, -9.8804e-02, -1.8588e-01,
         -1.7888e-01,  8.4643e-02,  1.3635e-01, -8.4074e-02,  1.0228e-01,
          9.5731e-02,  5.4969e-02,  6.3056e-02,  1.3399e-01,  8.6994e-02,
         -8.4250e-02,  1.2479e-02, -6.7345e-02,  5.3276e-02, -8.1666e-02,
         -1.1630e-01, -9.8289e-02],
        [ 7.6726e-02,  1.0609e-01, -1.2079e-01,  9.6347e-02, -1.6490e-01,
          1.4344e-01, -6.5608e-02,  3.5294e-02, -1.2422e-01,  1.1127e-01,
         -1.3539e-01, -7.1931e-02,  1.2068e-01, -1.0978e-01, -1.8134e-01,
         -6.6196e-02, -9.9194e-02,  3.3956e-02, -5.7969e-02, -2.0608e-02,
         -5.1845e-02,  9.7472e-02, -1.8976e-02, -7.2415e-02, -3.0227e-02,
          9.4941e-03, -1.3663e-01,  8.9336e-02, -1.5849e-01, -3.9659e-03,
          3.9386e-02, -1.6545e-01],
        [ 9.8736e-02, -1.0135e-01,  8.0483e-02,  1.4409e-01, -1.2160e-01,
          3.1718e-02,  8.1993e-02, -2.0832e-02,  3.3260e-02,  9.8064e-02,
          5.2826e-03,  5.7418e-02,  1.4227e-01,  1.3816e-02,  1.6165e-02,
         -1.7414e-01,  1.6282e-01,  6.8825e-02,  8.3688e-02, -1.5261e-01,
          3.9090e-02,  8.5820e-02, -8.6294e-02,  6.2339e-02, -1.0576e-01,
         -8.3823e-02, -1.2698e-01, -1.7246e-01, -1.2040e-01,  2.2769e-03,
         -1.3626e-01, -1.4425e-01],
        [-1.4552e-01,  1.6769e-01,  1.0517e-01, -1.5040e-01, -1.7494e-01,
         -1.1363e-01,  1.5687e-01, -5.3472e-02,  2.6388e-02,  3.2689e-02,
         -1.0548e-01, -1.7305e-01,  9.1144e-02,  1.2950e-01, -1.6765e-01,
          5.5216e-02,  3.2503e-02,  3.4163e-02, -8.9061e-02,  1.1428e-01,
          3.3625e-02,  2.1198e-03, -9.6732e-02, -7.4457e-02,  1.2784e-01,
         -7.5608e-03,  1.4791e-01, -1.6718e-01, -1.1567e-01,  1.5114e-01,
         -1.2707e-01,  8.4511e-02],
        [-9.5872e-02, -2.3334e-02, -1.4777e-01,  1.9431e-02, -8.5046e-02,
          1.0227e-01, -1.5656e-01, -1.2754e-01,  3.3429e-02, -1.0987e-01,
         -1.2200e-01,  6.1825e-02, -5.8239e-02,  1.4039e-01, -1.8679e-02,
          4.7515e-02,  1.0643e-02,  6.2715e-03,  1.3406e-01,  9.1758e-02,
          8.4880e-02, -2.6963e-02, -5.5850e-02,  9.2491e-02, -6.7984e-02,
         -1.1605e-01,  3.7447e-02,  7.6795e-02, -3.2185e-02,  1.5383e-01,
          7.9743e-02,  3.2280e-03],
        [ 1.2479e-01,  1.3201e-01,  1.0308e-01,  1.9613e-01,  4.9309e-02,
          1.6590e-01,  4.6929e-02,  9.2095e-02,  1.5317e-01, -7.9247e-02,
         -8.8695e-02, -7.8737e-02, -6.9205e-02, -2.3368e-02, -2.7017e-02,
         -2.0757e-02,  1.2293e-01,  7.1831e-03,  1.9363e-01, -4.0391e-02,
         -2.7874e-02,  8.8306e-02,  1.8870e-02,  7.0143e-02,  7.3131e-02,
          4.6301e-02, -9.8248e-02, -8.8463e-02, -6.1051e-02, -1.2150e-02,
         -8.6517e-02, -9.9056e-02],
        [-1.4547e-01,  2.4465e-02,  5.5225e-02, -1.1132e-01,  5.2110e-02,
         -1.6814e-02,  8.4382e-02, -3.0662e-02, -1.2413e-01, -1.0808e-02,
         -7.4518e-02,  9.2480e-02,  4.2237e-02,  7.5964e-02,  4.7826e-02,
          1.2397e-01, -6.8021e-02,  1.3597e-02, -5.0767e-02,  1.9178e-01,
          1.8187e-01, -5.5865e-02, -7.7852e-02,  1.6154e-01, -1.0569e-01,
          5.0366e-02, -1.0842e-01,  6.8427e-02,  3.3889e-02,  1.1406e-01,
          2.3486e-02,  1.3618e-01],
        [ 1.1907e-01, -1.5798e-01,  5.1108e-02,  1.2711e-01, -6.5244e-02,
         -9.2670e-02, -8.5657e-02, -4.9079e-03,  8.5248e-02, -6.2233e-02,
         -6.0565e-02, -6.6028e-03,  1.8056e-01,  1.6278e-01,  3.4462e-02,
          8.6073e-02, -3.6658e-02, -6.3322e-02,  6.9182e-02,  3.1712e-02,
         -7.7157e-02,  1.4422e-01,  8.1411e-02, -1.2858e-01, -7.5362e-03,
          1.7727e-01, -1.4820e-01, -1.2681e-01,  1.5176e-02, -6.6841e-02,
          1.9405e-01,  1.9790e-01],
        [ 1.0627e-01,  3.5207e-02, -1.1356e-01,  1.5401e-01, -6.1790e-02,
          8.7698e-02,  2.0239e-01,  4.1192e-02,  5.8362e-02, -4.9348e-02,
          1.7940e-01, -2.1874e-02, -1.2016e-01,  9.4480e-02,  1.1240e-01,
         -2.1519e-03, -8.0149e-02,  1.5342e-01,  6.2767e-02,  2.7290e-02,
         -1.3780e-01, -1.3024e-01,  1.3266e-02, -7.2802e-02, -3.1193e-02,
         -1.1473e-01,  2.1212e-02, -8.5782e-02,  9.4506e-02,  1.8356e-01,
         -1.4993e-01,  1.6546e-02],
        [ 1.4517e-01,  1.5811e-01,  1.0393e-01,  7.4876e-02, -5.8173e-02,
          1.6046e-01,  3.5498e-03,  1.7833e-01,  1.7303e-01,  8.3152e-02,
          4.9701e-02, -2.8002e-02, -1.2618e-01,  3.5582e-02,  8.0804e-02,
         -1.3689e-02,  1.7928e-01,  7.1025e-02,  3.3538e-02, -8.3516e-02,
         -6.8076e-02, -2.0351e-03,  2.0454e-01,  1.2247e-01,  1.8319e-01,
         -5.1139e-02,  3.3884e-02,  4.7312e-02,  8.5490e-02,  4.9036e-02,
         -1.0757e-01,  1.0568e-02],
        [ 8.4134e-02, -1.7004e-01,  1.0263e-01,  2.6401e-02,  1.2865e-01,
          2.7143e-02, -8.5932e-02,  1.8393e-01, -1.0903e-01,  3.4631e-02,
          3.0939e-02,  1.1691e-02,  1.0985e-01,  4.6080e-02,  6.2972e-02,
         -1.0305e-01,  1.3090e-01,  4.2205e-02, -6.6172e-02,  1.2238e-01,
         -3.5968e-02,  1.1332e-01,  1.3106e-01, -2.6826e-02,  2.2857e-02,
          1.8361e-01, -1.2974e-01,  2.6217e-02, -1.4771e-01,  4.3920e-02,
         -8.3052e-02,  2.0472e-02],
        [-1.3498e-02, -1.3218e-01,  1.5165e-01,  1.9579e-01, -1.7428e-02,
          1.9777e-02,  1.0247e-02,  1.9414e-01,  1.6804e-01,  1.0461e-01,
         -4.2928e-02, -6.3101e-02, -6.8058e-02,  1.7324e-01,  1.0532e-01,
          4.4715e-02, -3.1452e-02,  6.6161e-02,  1.2118e-01,  1.9140e-01,
          1.6455e-01,  5.7251e-02,  1.4982e-02,  1.0718e-01,  3.2592e-02,
          4.8970e-02, -8.3988e-02,  1.2669e-01,  1.1462e-01,  4.3005e-03,
         -1.3436e-01, -1.1856e-01],
        [ 2.1605e-02, -1.4933e-01,  1.1960e-01,  2.5226e-02, -1.3083e-01,
         -9.4554e-02, -1.4934e-01, -3.4240e-02, -3.7406e-02,  1.6369e-01,
          1.2023e-01,  4.6637e-02, -1.3025e-01, -1.4641e-01,  1.1804e-02,
          1.1995e-01, -4.9851e-03,  1.7051e-01,  1.5970e-01,  6.7795e-02,
         -2.1917e-02,  1.5421e-01,  2.2180e-02,  3.6097e-02, -5.5036e-02,
          6.3972e-02, -9.1835e-02, -9.6631e-02,  1.3722e-01, -7.0138e-02,
          1.3226e-01,  4.5197e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0488,  0.1122, -0.0920,  0.1461, -0.0349, -0.0440, -0.1318, -0.0236,
         0.0059, -0.0856,  0.1992,  0.0912,  0.1895,  0.0102, -0.1088,  0.1405],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2437, -0.0210,  0.1666, -0.0756, -0.2365,  0.2042,  0.1172, -0.2091,
          0.1728,  0.2215, -0.1853,  0.2638, -0.1892,  0.0987,  0.2818, -0.0613],
        [ 0.0923,  0.1988, -0.1702, -0.0453,  0.0863, -0.1742, -0.2378, -0.0894,
          0.1710,  0.1844,  0.2509, -0.0515,  0.2761,  0.0944,  0.1565, -0.0528],
        [-0.0306,  0.1283, -0.1017,  0.2024,  0.0117,  0.0910,  0.0809,  0.1341,
         -0.0986, -0.1665,  0.0106, -0.1002,  0.0460,  0.1706, -0.0149, -0.1884],
        [-0.2460,  0.0462,  0.1228, -0.0038,  0.0238, -0.2397, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1045, -0.1645, -0.0257,  0.1715, -0.2469],
        [-0.2244,  0.1291, -0.1695, -0.1456,  0.0730, -0.2440,  0.0173, -0.0843,
          0.1981, -0.1125, -0.2267,  0.1584, -0.0659,  0.0570,  0.2333, -0.0416],
        [-0.2105, -0.1688, -0.0988, -0.1371, -0.2017, -0.0359, -0.2153,  0.2153,
         -0.0254, -0.1200,  0.2463,  0.0201, -0.0604,  0.2219, -0.1430,  0.2424],
        [ 0.1829, -0.1509, -0.2170,  0.0298, -0.1459, -0.1223,  0.1648, -0.0936,
          0.1525,  0.2353,  0.2250,  0.1866,  0.0259,  0.1456,  0.1864,  0.0988],
        [-0.0095, -0.0247,  0.2432,  0.0123, -0.1037, -0.0634, -0.1852, -0.1645,
          0.2405, -0.1144, -0.1801, -0.0520, -0.1946,  0.0584,  0.2078, -0.1962]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0209, -0.0938,  0.0928, -0.1695,  0.0588, -0.1662,  0.2515, -0.0121],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0618, -0.0080, -0.1115,  0.0777,  0.1013,  0.0481, -0.0458,  0.0470,
          0.1302,  0.0216, -0.0137,  0.0874,  0.0241, -0.0078, -0.1089, -0.0474,
         -0.1019, -0.2109,  0.1723, -0.1862, -0.0004, -0.0393, -0.1593,  0.1453]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.1280], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6885, -0.6250, -0.8644,  ..., -0.9836, -1.3056,  0.1664],
        [ 1.4817,  0.7261,  0.5565,  ...,  0.4803, -0.1933,  1.5489],
        [ 1.2262, -1.3314,  2.1201,  ..., -0.0150, -0.3440, -0.3144],
        ...,
        [-1.2597, -0.4454, -1.6407,  ..., -0.3738, -0.1764,  2.0199],
        [ 1.0581, -0.5970,  2.2982,  ..., -2.0490, -0.1055,  1.5840],
        [ 1.3453, -2.1508, -0.2579,  ..., -0.9276, -1.1254,  0.1475]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2223,  0.3181, -1.4851,  ...,  0.0759,  0.2292,  0.6389],
        [ 0.0655,  0.7433,  0.1399,  ..., -0.0799,  1.4340,  0.2649],
        [ 1.4026,  0.6238,  1.9300,  ...,  0.0515, -2.1341,  1.7324],
        ...,
        [-0.4213,  0.3350,  0.3634,  ..., -0.9585,  0.7070, -2.7609],
        [ 0.6830, -1.1930, -1.7626,  ...,  0.8828,  0.0489,  0.5058],
        [ 0.7313,  0.7116, -0.3876,  ..., -2.7127,  0.1855, -0.3363]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1770,  0.1056,  0.1642,  ..., -0.0491, -0.1798,  0.0097],
        [-0.0183,  0.0549, -0.0430,  ..., -0.0622,  0.1643, -0.1094],
        [ 0.1385,  0.0699, -0.1242,  ..., -0.1229, -0.0476,  0.0965],
        ...,
        [-0.0749,  0.1145,  0.1002,  ..., -0.1402,  0.1474, -0.1749],
        [ 0.0004,  0.0480, -0.1504,  ...,  0.1031, -0.0446,  0.0399],
        [-0.1127,  0.0425,  0.1785,  ...,  0.0733,  0.0658,  0.1461]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1130,  0.0030, -0.0676, -0.0193,  0.1442,  0.0083,  0.0435,  0.0524,
        -0.0600, -0.1095, -0.0415, -0.1911, -0.0975,  0.0491, -0.0203,  0.1482,
        -0.1014, -0.0695, -0.1287,  0.1854,  0.1450,  0.1963,  0.0576,  0.0163,
         0.1110, -0.0187,  0.0034,  0.0210,  0.0960, -0.0351,  0.0777, -0.1120],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 0.1846, -0.0944,  0.0460,  0.1022,  0.1026,  0.1706, -0.1066,  0.1733,
          0.1402, -0.1007,  0.1960, -0.0824,  0.0904,  0.1621, -0.0071,  0.2117,
         -0.0300,  0.1081,  0.1662,  0.2095, -0.0451,  0.1878,  0.1856,  0.1163,
          0.1180, -0.0498,  0.1424, -0.0639,  0.1332,  0.0742, -0.0269,  0.0004],
        [-0.1351, -0.1374,  0.0188,  0.0120, -0.1622,  0.1153, -0.1125, -0.0951,
         -0.0008,  0.0590,  0.0906, -0.0235,  0.1622,  0.0573, -0.0295,  0.1328,
         -0.1849,  0.0232,  0.1105,  0.1518, -0.1310, -0.0181,  0.0339,  0.1430,
         -0.1252, -0.1565, -0.0178,  0.1453,  0.1495, -0.0189, -0.1294,  0.0888],
        [ 0.0602,  0.0969, -0.1396, -0.1279,  0.0166,  0.0395, -0.0754,  0.0684,
         -0.0879,  0.0225, -0.0019, -0.0170, -0.1048,  0.0005,  0.0739,  0.0019,
          0.0975, -0.1521, -0.0151, -0.1502,  0.0389,  0.0468, -0.0335,  0.0414,
          0.0574, -0.1159, -0.1774, -0.1607, -0.1150, -0.0082,  0.0879, -0.1399],
        [-0.0005,  0.0172, -0.0772,  0.0599,  0.0500,  0.0031, -0.1956,  0.1104,
         -0.0651, -0.1693, -0.1463,  0.0511,  0.1079, -0.1100, -0.1936, -0.1890,
          0.0713,  0.1234, -0.0885,  0.0905,  0.0859,  0.0469,  0.0552,  0.1253,
          0.0758, -0.0960,  0.0096, -0.0741,  0.0429, -0.0894, -0.1259, -0.1059],
        [ 0.0780,  0.1079, -0.1213,  0.0966, -0.1657,  0.1422, -0.0653,  0.0361,
         -0.1221,  0.1106, -0.1356, -0.0731,  0.1207, -0.1092, -0.1812, -0.0664,
         -0.1001,  0.0347, -0.0573, -0.0217, -0.0504,  0.0959, -0.0206, -0.0723,
         -0.0297,  0.0062, -0.1362,  0.0895, -0.1594, -0.0044,  0.0355, -0.1645],
        [ 0.0947, -0.1018,  0.0763,  0.1406, -0.1255,  0.0320,  0.0799, -0.0229,
          0.0330,  0.0990,  0.0009,  0.0553,  0.1467,  0.0126,  0.0081, -0.1798,
          0.1603,  0.0675,  0.0822, -0.1577,  0.0400,  0.0856, -0.0890,  0.0574,
         -0.1076, -0.0875, -0.1246, -0.1721, -0.1224,  0.0029, -0.1376, -0.1452],
        [-0.1470,  0.1682,  0.1058, -0.1542, -0.1771, -0.1082,  0.1597, -0.0543,
          0.0257,  0.0322, -0.1091, -0.1737,  0.0859,  0.1317, -0.1645,  0.0537,
          0.0352,  0.0350, -0.0863,  0.1146,  0.0350,  0.0023, -0.0962, -0.0744,
          0.1283, -0.0050,  0.1542, -0.1646, -0.1176,  0.1521, -0.1255,  0.0825],
        [-0.0999, -0.0231, -0.1505,  0.0152, -0.0908,  0.1004, -0.1570, -0.1345,
          0.0279, -0.1132, -0.1280,  0.0583, -0.0619,  0.1373, -0.0189,  0.0409,
          0.0087, -0.0008,  0.1310,  0.0894,  0.0805, -0.0300, -0.0610,  0.0916,
         -0.0724, -0.1166,  0.0422,  0.0743, -0.0377,  0.1524,  0.0747, -0.0003],
        [ 0.1385,  0.1372,  0.1198,  0.2144,  0.0661,  0.1804,  0.0618,  0.1086,
          0.1689, -0.0677, -0.0724, -0.0675, -0.0555, -0.0074, -0.0125, -0.0063,
          0.1395,  0.0229,  0.2074, -0.0243, -0.0136,  0.1046,  0.0345,  0.0845,
          0.0887,  0.0626, -0.0970, -0.0771, -0.0435,  0.0014, -0.0738, -0.0839],
        [-0.1318,  0.0305,  0.0705, -0.0931,  0.0687, -0.0037,  0.0990, -0.0141,
         -0.1081,  0.0007, -0.0585,  0.1037,  0.0557,  0.0917,  0.0623,  0.1388,
         -0.0524,  0.0284, -0.0395,  0.2072,  0.1964, -0.0396, -0.0626,  0.1756,
         -0.0903,  0.0659, -0.1073,  0.0797,  0.0513,  0.1274,  0.0353,  0.1516],
        [ 0.1329, -0.1519,  0.0679,  0.1453, -0.0483, -0.0780, -0.0708,  0.0118,
          0.1017, -0.0507, -0.0443,  0.0047,  0.1943,  0.1789,  0.0493,  0.1011,
         -0.0198, -0.0474,  0.0832,  0.0479, -0.0620,  0.1606,  0.0968, -0.1142,
          0.0082,  0.1934, -0.1475, -0.1151,  0.0329, -0.0531,  0.2064,  0.2134],
        [ 0.1203,  0.0398, -0.0966,  0.1723, -0.0448,  0.1022,  0.2168,  0.0578,
          0.0745, -0.0378,  0.1956, -0.0104, -0.1064,  0.1104,  0.1269,  0.0127,
         -0.0635,  0.1690,  0.0764,  0.0434, -0.1226, -0.1140,  0.0288, -0.0584,
         -0.0154, -0.0983,  0.0238, -0.0745,  0.1122,  0.1967, -0.1371,  0.0321],
        [ 0.1591,  0.1637,  0.1208,  0.0932, -0.0412,  0.1751,  0.0183,  0.1951,
          0.1895,  0.0947,  0.0661, -0.0165, -0.1122,  0.0519,  0.0956,  0.0015,
          0.1960,  0.0868,  0.0474, -0.0673, -0.0529,  0.0145,  0.2200,  0.1368,
          0.1990, -0.0348,  0.0343,  0.0590,  0.1032,  0.0626, -0.0951,  0.0262],
        [ 0.0975, -0.1658,  0.1197,  0.0453,  0.1461,  0.0421, -0.0710,  0.2011,
         -0.0921,  0.0461,  0.0475,  0.0240,  0.1236,  0.0628,  0.0778, -0.0880,
          0.1484,  0.0581, -0.0522,  0.1389, -0.0212,  0.1301,  0.1466, -0.0123,
          0.0392,  0.2002, -0.1298,  0.0385, -0.1294,  0.0572, -0.0703,  0.0361],
        [ 0.0005, -0.1267,  0.1686,  0.2141, -0.0004,  0.0345,  0.0250,  0.2109,
          0.1845,  0.1163, -0.0266, -0.0514, -0.0541,  0.1893,  0.1200,  0.0598,
         -0.0146,  0.0820,  0.1350,  0.2075,  0.1798,  0.0738,  0.0306,  0.1215,
          0.0483,  0.0653, -0.0824,  0.1383,  0.1323,  0.0176, -0.1216, -0.1028],
        [ 0.0330, -0.1462,  0.1335,  0.0409, -0.1164, -0.0828, -0.1372, -0.0201,
         -0.0246,  0.1720,  0.1330,  0.0553, -0.1209, -0.1333,  0.0238,  0.1320,
          0.0103,  0.1846,  0.1709,  0.0816, -0.0100,  0.1674,  0.0351,  0.0467,
         -0.0421,  0.0775, -0.0936, -0.0874,  0.1520, -0.0590,  0.1427,  0.0574]],
       device='cuda:0')), ('mlp.2.bias', tensor([-0.0332,  0.1188, -0.0930,  0.1344, -0.0362, -0.0468, -0.1301, -0.0281,
         0.0216, -0.0700,  0.2148,  0.1068,  0.2052,  0.0268, -0.0930,  0.1533],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2613, -0.0062,  0.1667, -0.0614, -0.2374,  0.2016,  0.1107, -0.2087,
          0.1903,  0.2383, -0.1676,  0.2809, -0.1721,  0.1166,  0.2995, -0.0437],
        [ 0.1097,  0.2134, -0.1701, -0.0308,  0.0877, -0.1770, -0.2440, -0.0890,
          0.1886,  0.2012,  0.2684, -0.0343,  0.2930,  0.1122,  0.1742, -0.0353],
        [-0.0422,  0.1208, -0.1033,  0.1908,  0.0093,  0.0890,  0.0807,  0.1312,
         -0.1106, -0.1770, -0.0008, -0.1116,  0.0345,  0.1582, -0.0266, -0.1997],
        [-0.2459,  0.0462,  0.1227, -0.0038,  0.0238, -0.2397, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1045, -0.1644, -0.0257,  0.1714, -0.2468],
        [-0.2095,  0.1393, -0.1709, -0.1306,  0.0706, -0.2485,  0.0077, -0.0896,
          0.2127, -0.0991, -0.2117,  0.1724, -0.0517,  0.0721,  0.2484, -0.0271],
        [-0.2027, -0.1640, -0.1009, -0.1294, -0.1995, -0.0377, -0.2173,  0.2131,
         -0.0170, -0.1155,  0.2546,  0.0252, -0.0527,  0.2300, -0.1353,  0.2505],
        [ 0.2003, -0.1362, -0.2168,  0.0443, -0.1444, -0.1252,  0.1585, -0.0932,
          0.1700,  0.2522,  0.2425,  0.2037,  0.0429,  0.1634,  0.2042,  0.1162],
        [-0.0128, -0.0249,  0.2426,  0.0090, -0.1035, -0.0642, -0.1858, -0.1648,
          0.2373, -0.1173, -0.1835, -0.0553, -0.1978,  0.0549,  0.2044, -0.1984]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0051, -0.0783,  0.0817, -0.1695,  0.0718, -0.1582,  0.2670, -0.0156],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0600, -0.0065, -0.1083,  0.0768,  0.0983,  0.0452, -0.0495,  0.0471,
          0.1234,  0.0220, -0.0150,  0.0866,  0.0247, -0.0060, -0.1031, -0.0446,
         -0.1197, -0.2286,  0.1619, -0.1862, -0.0149, -0.0480, -0.1764,  0.1423]],

epoch: 3, loss: 0.53, time: 5.54:   1%|             | 3/400 [00:14<32:43,  4.95s/it]
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6885, -0.6250, -0.8644,  ..., -0.9836, -1.3056,  0.1664],
        [ 1.4817,  0.7261,  0.5565,  ...,  0.4803, -0.1933,  1.5489],
        [ 1.2262, -1.3314,  2.1201,  ..., -0.0150, -0.3440, -0.3144],
        ...,
        [-1.2597, -0.4454, -1.6407,  ..., -0.3738, -0.1764,  2.0199],
        [ 1.0581, -0.5970,  2.2982,  ..., -2.0490, -0.1055,  1.5840],
        [ 1.3453, -2.1508, -0.2579,  ..., -0.9276, -1.1254,  0.1475]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2223,  0.3181, -1.4851,  ...,  0.0759,  0.2292,  0.6389],
        [ 0.0655,  0.7433,  0.1399,  ..., -0.0799,  1.4340,  0.2649],
        [ 1.4026,  0.6238,  1.9300,  ...,  0.0515, -2.1341,  1.7324],
        ...,
        [-0.4213,  0.3350,  0.3634,  ..., -0.9585,  0.7070, -2.7609],
        [ 0.6830, -1.1930, -1.7626,  ...,  0.8828,  0.0489,  0.5058],
        [ 0.7313,  0.7116, -0.3876,  ..., -2.7127,  0.1855, -0.3363]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1770,  0.1056,  0.1642,  ..., -0.0491, -0.1798,  0.0097],
        [-0.0183,  0.0549, -0.0430,  ..., -0.0622,  0.1643, -0.1094],
        [ 0.1385,  0.0699, -0.1242,  ..., -0.1229, -0.0476,  0.0965],
        ...,
        [-0.0749,  0.1145,  0.1002,  ..., -0.1402,  0.1474, -0.1749],
        [ 0.0004,  0.0480, -0.1504,  ...,  0.1031, -0.0446,  0.0399],
        [-0.1127,  0.0425,  0.1785,  ...,  0.0733,  0.0658,  0.1461]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1130,  0.0030, -0.0676, -0.0193,  0.1442,  0.0083,  0.0435,  0.0524,
        -0.0600, -0.1095, -0.0415, -0.1911, -0.0975,  0.0491, -0.0203,  0.1482,
        -0.1014, -0.0695, -0.1287,  0.1854,  0.1450,  0.1963,  0.0576,  0.0163,
         0.1110, -0.0187,  0.0034,  0.0210,  0.0960, -0.0351,  0.0777, -0.1120],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 0.1846, -0.0944,  0.0460,  0.1022,  0.1026,  0.1706, -0.1066,  0.1733,
          0.1402, -0.1007,  0.1960, -0.0824,  0.0904,  0.1621, -0.0071,  0.2117,
         -0.0300,  0.1081,  0.1662,  0.2095, -0.0451,  0.1878,  0.1856,  0.1163,
          0.1180, -0.0498,  0.1424, -0.0639,  0.1332,  0.0742, -0.0269,  0.0004],
        [-0.1351, -0.1374,  0.0188,  0.0120, -0.1622,  0.1153, -0.1125, -0.0951,
         -0.0008,  0.0590,  0.0906, -0.0235,  0.1622,  0.0573, -0.0295,  0.1328,
         -0.1849,  0.0232,  0.1105,  0.1518, -0.1310, -0.0181,  0.0339,  0.1430,
         -0.1252, -0.1565, -0.0178,  0.1453,  0.1495, -0.0189, -0.1294,  0.0888],
        [ 0.0602,  0.0969, -0.1396, -0.1279,  0.0166,  0.0395, -0.0754,  0.0684,
         -0.0879,  0.0225, -0.0019, -0.0170, -0.1048,  0.0005,  0.0739,  0.0019,
          0.0975, -0.1521, -0.0151, -0.1502,  0.0389,  0.0468, -0.0335,  0.0414,
          0.0574, -0.1159, -0.1774, -0.1607, -0.1150, -0.0082,  0.0879, -0.1399],
        [-0.0005,  0.0172, -0.0772,  0.0599,  0.0500,  0.0031, -0.1956,  0.1104,
         -0.0651, -0.1693, -0.1463,  0.0511,  0.1079, -0.1100, -0.1936, -0.1890,
          0.0713,  0.1234, -0.0885,  0.0905,  0.0859,  0.0469,  0.0552,  0.1253,
          0.0758, -0.0960,  0.0096, -0.0741,  0.0429, -0.0894, -0.1259, -0.1059],
        [ 0.0780,  0.1079, -0.1213,  0.0966, -0.1657,  0.1422, -0.0653,  0.0361,
         -0.1221,  0.1106, -0.1356, -0.0731,  0.1207, -0.1092, -0.1812, -0.0664,
         -0.1001,  0.0347, -0.0573, -0.0217, -0.0504,  0.0959, -0.0206, -0.0723,
         -0.0297,  0.0062, -0.1362,  0.0895, -0.1594, -0.0044,  0.0355, -0.1645],
        [ 0.0947, -0.1018,  0.0763,  0.1406, -0.1255,  0.0320,  0.0799, -0.0229,
          0.0330,  0.0990,  0.0009,  0.0553,  0.1467,  0.0126,  0.0081, -0.1798,
          0.1603,  0.0675,  0.0822, -0.1577,  0.0400,  0.0856, -0.0890,  0.0574,
         -0.1076, -0.0875, -0.1246, -0.1721, -0.1224,  0.0029, -0.1376, -0.1452],
        [-0.1470,  0.1682,  0.1058, -0.1542, -0.1771, -0.1082,  0.1597, -0.0543,
          0.0257,  0.0322, -0.1091, -0.1737,  0.0859,  0.1317, -0.1645,  0.0537,
          0.0352,  0.0350, -0.0863,  0.1146,  0.0350,  0.0023, -0.0962, -0.0744,
          0.1283, -0.0050,  0.1542, -0.1646, -0.1176,  0.1521, -0.1255,  0.0825],
        [-0.0999, -0.0231, -0.1505,  0.0152, -0.0908,  0.1004, -0.1570, -0.1345,
          0.0279, -0.1132, -0.1280,  0.0583, -0.0619,  0.1373, -0.0189,  0.0409,
          0.0087, -0.0008,  0.1310,  0.0894,  0.0805, -0.0300, -0.0610,  0.0916,
         -0.0724, -0.1166,  0.0422,  0.0743, -0.0377,  0.1524,  0.0747, -0.0003],
        [ 0.1385,  0.1372,  0.1198,  0.2144,  0.0661,  0.1804,  0.0618,  0.1086,
          0.1689, -0.0677, -0.0724, -0.0675, -0.0555, -0.0074, -0.0125, -0.0063,
          0.1395,  0.0229,  0.2074, -0.0243, -0.0136,  0.1046,  0.0345,  0.0845,
          0.0887,  0.0626, -0.0970, -0.0771, -0.0435,  0.0014, -0.0738, -0.0839],
        [-0.1318,  0.0305,  0.0705, -0.0931,  0.0687, -0.0037,  0.0990, -0.0141,
         -0.1081,  0.0007, -0.0585,  0.1037,  0.0557,  0.0917,  0.0623,  0.1388,
         -0.0524,  0.0284, -0.0395,  0.2072,  0.1964, -0.0396, -0.0626,  0.1756,
         -0.0903,  0.0659, -0.1073,  0.0797,  0.0513,  0.1274,  0.0353,  0.1516],
        [ 0.1329, -0.1519,  0.0679,  0.1453, -0.0483, -0.0780, -0.0708,  0.0118,
          0.1017, -0.0507, -0.0443,  0.0047,  0.1943,  0.1789,  0.0493,  0.1011,
         -0.0198, -0.0474,  0.0832,  0.0479, -0.0620,  0.1606,  0.0968, -0.1142,
          0.0082,  0.1934, -0.1475, -0.1151,  0.0329, -0.0531,  0.2064,  0.2134],
        [ 0.1203,  0.0398, -0.0966,  0.1723, -0.0448,  0.1022,  0.2168,  0.0578,
          0.0745, -0.0378,  0.1956, -0.0104, -0.1064,  0.1104,  0.1269,  0.0127,
         -0.0635,  0.1690,  0.0764,  0.0434, -0.1226, -0.1140,  0.0288, -0.0584,
         -0.0154, -0.0983,  0.0238, -0.0745,  0.1122,  0.1967, -0.1371,  0.0321],
        [ 0.1591,  0.1637,  0.1208,  0.0932, -0.0412,  0.1751,  0.0183,  0.1951,
          0.1895,  0.0947,  0.0661, -0.0165, -0.1122,  0.0519,  0.0956,  0.0015,
          0.1960,  0.0868,  0.0474, -0.0673, -0.0529,  0.0145,  0.2200,  0.1368,
          0.1990, -0.0348,  0.0343,  0.0590,  0.1032,  0.0626, -0.0951,  0.0262],
        [ 0.0975, -0.1658,  0.1197,  0.0453,  0.1461,  0.0421, -0.0710,  0.2011,
         -0.0921,  0.0461,  0.0475,  0.0240,  0.1236,  0.0628,  0.0778, -0.0880,
          0.1484,  0.0581, -0.0522,  0.1389, -0.0212,  0.1301,  0.1466, -0.0123,
          0.0392,  0.2002, -0.1298,  0.0385, -0.1294,  0.0572, -0.0703,  0.0361],
        [ 0.0005, -0.1267,  0.1686,  0.2141, -0.0004,  0.0345,  0.0250,  0.2109,
          0.1845,  0.1163, -0.0266, -0.0514, -0.0541,  0.1893,  0.1200,  0.0598,
         -0.0146,  0.0820,  0.1350,  0.2075,  0.1798,  0.0738,  0.0306,  0.1215,
          0.0483,  0.0653, -0.0824,  0.1383,  0.1323,  0.0176, -0.1216, -0.1028],
        [ 0.0330, -0.1462,  0.1335,  0.0409, -0.1164, -0.0828, -0.1372, -0.0201,
         -0.0246,  0.1720,  0.1330,  0.0553, -0.1209, -0.1333,  0.0238,  0.1320,
          0.0103,  0.1846,  0.1709,  0.0816, -0.0100,  0.1674,  0.0351,  0.0467,
         -0.0421,  0.0775, -0.0936, -0.0874,  0.1520, -0.0590,  0.1427,  0.0574]],
       device='cuda:0')), ('mlp.2.bias', tensor([-0.0332,  0.1188, -0.0930,  0.1344, -0.0362, -0.0468, -0.1301, -0.0281,
         0.0216, -0.0700,  0.2148,  0.1068,  0.2052,  0.0268, -0.0930,  0.1533],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2613, -0.0062,  0.1667, -0.0614, -0.2374,  0.2016,  0.1107, -0.2087,
          0.1903,  0.2383, -0.1676,  0.2809, -0.1721,  0.1166,  0.2995, -0.0437],
        [ 0.1097,  0.2134, -0.1701, -0.0308,  0.0877, -0.1770, -0.2440, -0.0890,
          0.1886,  0.2012,  0.2684, -0.0343,  0.2930,  0.1122,  0.1742, -0.0353],
        [-0.0422,  0.1208, -0.1033,  0.1908,  0.0093,  0.0890,  0.0807,  0.1312,
         -0.1106, -0.1770, -0.0008, -0.1116,  0.0345,  0.1582, -0.0266, -0.1997],
        [-0.2459,  0.0462,  0.1227, -0.0038,  0.0238, -0.2397, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1119, -0.1045, -0.1644, -0.0257,  0.1714, -0.2468],
        [-0.2095,  0.1393, -0.1709, -0.1306,  0.0706, -0.2485,  0.0077, -0.0896,
          0.2127, -0.0991, -0.2117,  0.1724, -0.0517,  0.0721,  0.2484, -0.0271],
        [-0.2027, -0.1640, -0.1009, -0.1294, -0.1995, -0.0377, -0.2173,  0.2131,
         -0.0170, -0.1155,  0.2546,  0.0252, -0.0527,  0.2300, -0.1353,  0.2505],
        [ 0.2003, -0.1362, -0.2168,  0.0443, -0.1444, -0.1252,  0.1585, -0.0932,
          0.1700,  0.2522,  0.2425,  0.2037,  0.0429,  0.1634,  0.2042,  0.1162],
        [-0.0128, -0.0249,  0.2426,  0.0090, -0.1035, -0.0642, -0.1858, -0.1648,
          0.2373, -0.1173, -0.1835, -0.0553, -0.1978,  0.0549,  0.2044, -0.1984]],
       device='cuda:0')), ('mlp.4.bias', tensor([-0.0051, -0.0783,  0.0817, -0.1695,  0.0718, -0.1582,  0.2670, -0.0156],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0600, -0.0065, -0.1083,  0.0768,  0.0983,  0.0452, -0.0495,  0.0471,
          0.1234,  0.0220, -0.0150,  0.0866,  0.0247, -0.0060, -0.1031, -0.0446,
         -0.1197, -0.2286,  0.1619, -0.1862, -0.0149, -0.0480, -0.1764,  0.1423]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.1434], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6884, -0.6249, -0.8642,  ..., -0.9834, -1.3053,  0.1663],
        [ 1.4813,  0.7260,  0.5563,  ...,  0.4802, -0.1933,  1.5486],
        [ 1.2260, -1.3311,  2.1196,  ..., -0.0150, -0.3439, -0.3143],
        ...,
        [-1.2594, -0.4453, -1.6403,  ..., -0.3737, -0.1764,  2.0194],
        [ 1.0579, -0.5968,  2.2977,  ..., -2.0485, -0.1054,  1.5836],
        [ 1.3449, -2.1503, -0.2579,  ..., -0.9274, -1.1251,  0.1474]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2207,  0.3153, -1.4857,  ...,  0.0731,  0.2302,  0.6362],
        [ 0.0667,  0.7412,  0.1386,  ..., -0.0818,  1.4353,  0.2634],
        [ 1.4029,  0.6229,  1.9290,  ...,  0.0509, -2.1334,  1.7312],
        ...,
        [-0.4209,  0.3342,  0.3629,  ..., -0.9587,  0.7072, -2.7606],
        [ 0.6831, -1.1930, -1.7620,  ...,  0.8823,  0.0491,  0.5054],
        [ 0.7308,  0.7110, -0.3877,  ..., -2.7122,  0.1857, -0.3366]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1781,  0.1076,  0.1648,  ..., -0.0431, -0.1863,  0.0167],
        [-0.0201,  0.0550, -0.0422,  ..., -0.0607,  0.1667, -0.1093],
        [ 0.1381,  0.0726, -0.1250,  ..., -0.1165, -0.0494,  0.1008],
        ...,
        [-0.0755,  0.1174,  0.1007,  ..., -0.1387,  0.1507, -0.1804],
        [ 0.0009,  0.0449, -0.1505,  ...,  0.0961, -0.0445,  0.0473],
        [-0.1144,  0.0457,  0.1798,  ...,  0.0817,  0.0653,  0.1523]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1004, -0.0027, -0.0545, -0.0041,  0.1568,  0.0208,  0.0555,  0.0664,
        -0.0466, -0.0963, -0.0274, -0.1982, -0.0851,  0.0627, -0.0065,  0.1615,
        -0.0892, -0.0575, -0.1170,  0.2001,  0.1576,  0.2094,  0.0716,  0.0296,
         0.1261, -0.0056, -0.0011,  0.0319,  0.1099, -0.0226,  0.0658, -0.0994],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.9764e-01, -9.0789e-02,  6.0775e-02,  1.1808e-01,  1.1608e-01,
          1.8445e-01, -9.3397e-02,  1.8808e-01,  1.5410e-01, -8.7890e-02,
          2.1126e-01, -7.4331e-02,  1.0355e-01,  1.7677e-01,  6.3848e-03,
          2.2578e-01, -1.4845e-02,  1.2021e-01,  1.7871e-01,  2.2449e-01,
         -3.2086e-02,  2.0263e-01,  1.9974e-01,  1.2960e-01,  1.3197e-01,
         -3.4377e-02,  1.4115e-01, -5.2071e-02,  1.4855e-01,  8.6959e-02,
         -1.7369e-02,  1.3063e-02],
        [-1.2255e-01, -1.3390e-01,  3.3076e-02,  2.6968e-02, -1.4916e-01,
          1.2884e-01, -9.9579e-02, -8.1519e-02,  1.2610e-02,  7.0294e-02,
          1.0576e-01, -1.5839e-02,  1.7528e-01,  7.1146e-02, -1.6257e-02,
          1.4638e-01, -1.7252e-01,  3.3138e-02,  1.2279e-01,  1.6574e-01,
         -1.1844e-01, -3.2109e-03,  4.7916e-02,  1.5515e-01, -1.1248e-01,
         -1.4278e-01, -1.6973e-02,  1.5686e-01,  1.6452e-01, -6.5551e-03,
         -1.2054e-01,  1.0148e-01],
        [ 6.1123e-02,  9.7157e-02, -1.3876e-01, -1.2826e-01,  1.6613e-02,
          4.2345e-02, -7.6152e-02,  6.9601e-02, -8.6952e-02,  2.3494e-02,
         -7.4653e-06, -1.7516e-02, -1.0379e-01,  1.0332e-03,  7.2522e-02,
          2.7777e-03,  9.9203e-02, -1.5182e-01, -1.4293e-02, -1.5064e-01,
          4.0946e-02,  4.9207e-02, -3.1445e-02,  3.9269e-02,  5.6808e-02,
         -1.1497e-01, -1.7654e-01, -1.6017e-01, -1.1351e-01, -8.4358e-03,
          9.0631e-02, -1.3838e-01],
        [-8.4073e-03,  1.3320e-02, -8.1921e-02,  4.8113e-02,  4.0161e-02,
         -1.1657e-03, -2.0076e-01,  9.9157e-02, -7.1563e-02, -1.7821e-01,
         -1.5336e-01,  4.6898e-02,  1.0420e-01, -1.1871e-01, -1.9930e-01,
         -1.9862e-01,  5.9576e-02,  1.1239e-01, -9.0128e-02,  7.9199e-02,
          7.8971e-02,  4.3153e-02,  4.9563e-02,  1.1763e-01,  6.6494e-02,
         -1.0653e-01,  1.2094e-02, -7.8831e-02,  3.5176e-02, -9.4289e-02,
         -1.3219e-01, -1.1003e-01],
        [ 7.9628e-02,  1.0931e-01, -1.2302e-01,  9.6733e-02, -1.6501e-01,
          1.3984e-01, -6.5262e-02,  3.7045e-02, -1.2033e-01,  1.0844e-01,
         -1.3708e-01, -7.4607e-02,  1.1961e-01, -1.0826e-01, -1.8216e-01,
         -6.6906e-02, -1.0026e-01,  3.4569e-02, -5.9297e-02, -2.1495e-02,
         -5.0518e-02,  9.3650e-02, -2.2629e-02, -7.1981e-02, -3.0970e-02,
          1.7940e-03, -1.3606e-01,  9.0564e-02, -1.6039e-01, -5.5369e-03,
          3.0882e-02, -1.6515e-01],
        [ 9.0690e-02, -1.0271e-01,  7.3376e-02,  1.3729e-01, -1.2907e-01,
          3.2183e-02,  7.7553e-02, -2.5528e-02,  3.1145e-02,  9.6919e-02,
         -2.2878e-03,  5.2583e-02,  1.4785e-01,  1.2820e-02,  1.8636e-03,
         -1.8490e-01,  1.5572e-01,  6.3694e-02,  8.1833e-02, -1.6188e-01,
          3.8877e-02,  8.5805e-02, -9.1394e-02,  5.1481e-02, -1.1133e-01,
         -9.1820e-02, -1.2147e-01, -1.7046e-01, -1.2552e-01,  2.4522e-03,
         -1.4001e-01, -1.4720e-01],
        [-1.4720e-01,  1.6759e-01,  1.0609e-01, -1.5792e-01, -1.8007e-01,
         -1.0374e-01,  1.6212e-01, -5.6030e-02,  2.5236e-02,  3.1345e-02,
         -1.1240e-01, -1.7502e-01,  8.0946e-02,  1.3284e-01, -1.6260e-01,
          5.1846e-02,  3.6153e-02,  3.6507e-02, -8.3327e-02,  1.1502e-01,
          3.6192e-02, -9.3396e-05, -9.7105e-02, -7.4313e-02,  1.2719e-01,
         -2.6789e-03,  1.6167e-01, -1.5978e-01, -1.1956e-01,  1.5211e-01,
         -1.2509e-01,  8.1477e-02],
        [-9.9872e-02, -2.2920e-02, -1.4977e-01,  1.1464e-02, -9.5592e-02,
          9.8959e-02, -1.5575e-01, -1.3891e-01,  2.5477e-02, -1.1495e-01,
         -1.3286e-01,  5.6248e-02, -6.5934e-02,  1.3589e-01, -1.9710e-02,
          3.6167e-02,  8.7092e-03, -4.2757e-03,  1.2969e-01,  8.8412e-02,
          7.7994e-02, -3.1826e-02, -6.5187e-02,  9.1960e-02, -7.4985e-02,
         -1.1545e-01,  5.0100e-02,  7.5243e-02, -4.1520e-02,  1.5231e-01,
          7.2401e-02, -3.1224e-03],
        [ 1.5160e-01,  1.4037e-01,  1.3468e-01,  2.3039e-01,  7.9690e-02,
          1.9434e-01,  7.5088e-02,  1.2350e-01,  1.8291e-01, -5.4775e-02,
         -5.6941e-02, -5.9684e-02, -4.2265e-02,  7.3791e-03,  1.1929e-03,
          7.3816e-03,  1.5481e-01,  3.5204e-02,  2.1994e-01, -8.9697e-03,
         -5.9383e-04,  1.1937e-01,  4.8689e-02,  9.7843e-02,  1.0293e-01,
          7.8153e-02, -9.8462e-02, -6.5341e-02, -2.8024e-02,  1.4239e-02,
         -6.4083e-02, -7.1299e-02],
        [-1.1893e-01,  3.4270e-02,  8.4456e-02, -7.7156e-02,  8.2236e-02,
          9.7080e-03,  1.1218e-01,  6.5781e-04, -9.4177e-02,  1.4015e-02,
         -4.3184e-02,  1.1155e-01,  6.8811e-02,  1.0625e-01,  7.5748e-02,
          1.5287e-01, -3.7707e-02,  4.0377e-02, -2.7746e-02,  2.2228e-01,
          2.0914e-01, -2.4764e-02, -4.8437e-02,  1.8878e-01, -7.6305e-02,
          8.1330e-02, -1.0850e-01,  9.1449e-02,  6.6662e-02,  1.4012e-01,
          4.4742e-02,  1.6415e-01],
        [ 1.4603e-01, -1.4802e-01,  8.2924e-02,  1.6147e-01, -3.4589e-02,
         -6.3758e-02, -5.7445e-02,  2.6677e-02,  1.1574e-01, -3.7761e-02,
         -2.8941e-02,  1.2663e-02,  2.0755e-01,  1.9381e-01,  6.2949e-02,
          1.1524e-01, -4.1542e-03, -3.5061e-02,  9.5859e-02,  6.3320e-02,
         -4.9036e-02,  1.7529e-01,  1.1085e-01, -1.0085e-01,  2.2466e-02,
          2.0901e-01, -1.4847e-01, -1.0309e-01,  4.8297e-02, -4.0144e-02,
          2.1579e-01,  2.2580e-01],
        [ 1.3348e-01,  4.3294e-02, -8.1618e-02,  1.8839e-01, -3.1163e-02,
          1.1605e-01,  2.3002e-01,  7.2686e-02,  8.8526e-02, -2.4742e-02,
          2.1100e-01, -2.3577e-03, -9.3119e-02,  1.2526e-01,  1.4050e-01,
          2.6848e-02, -4.8045e-02,  1.8135e-01,  8.8980e-02,  5.8732e-02,
         -1.0944e-01, -9.9009e-02,  4.3066e-02, -4.5100e-02, -1.1490e-03,
         -8.2511e-02,  2.2859e-02, -6.2633e-02,  1.2773e-01,  2.0947e-01,
         -1.2717e-01,  4.4694e-02],
        [ 1.7228e-01,  1.6726e-01,  1.3566e-01,  1.0917e-01, -2.7553e-02,
          1.8912e-01,  3.1587e-02,  2.1000e-01,  2.0350e-01,  1.0760e-01,
          8.1407e-02, -8.4180e-03, -9.8838e-02,  6.6658e-02,  1.0916e-01,
          1.5699e-02,  2.1141e-01,  9.9012e-02,  6.0029e-02, -5.2035e-02,
         -3.9910e-02,  2.9351e-02,  2.3417e-01,  1.5019e-01,  2.1296e-01,
         -1.9309e-02,  3.3258e-02,  7.0948e-02,  1.1871e-01,  7.5488e-02,
         -8.5517e-02,  3.8851e-02],
        [ 1.1045e-01, -1.6232e-01,  1.3478e-01,  6.1623e-02,  1.5999e-01,
          5.6518e-02, -5.7630e-02,  2.1605e-01, -7.7828e-02,  5.8909e-02,
          6.2899e-02,  3.2083e-02,  1.3690e-01,  7.7905e-02,  9.1475e-02,
         -7.3823e-02,  1.6430e-01,  7.0306e-02, -3.9411e-02,  1.5448e-01,
         -8.2735e-03,  1.4506e-01,  1.6079e-01,  9.4922e-04,  5.3558e-02,
          2.1589e-01, -1.3046e-01,  5.0689e-02, -1.1377e-01,  7.0224e-02,
         -6.0528e-02,  4.8641e-02],
        [ 1.3719e-02, -1.2294e-01,  1.8340e-01,  2.3010e-01,  1.3162e-02,
          4.8470e-02,  3.8265e-02,  2.2573e-01,  1.9846e-01,  1.2902e-01,
         -1.1155e-02, -4.3352e-02, -4.0911e-02,  2.0403e-01,  1.3348e-01,
          7.4017e-02,  6.6722e-04,  9.4199e-02,  1.4758e-01,  2.2269e-01,
          1.9284e-01,  8.8679e-02,  4.4859e-02,  1.3494e-01,  6.2468e-02,
          8.0762e-02, -8.3486e-02,  1.5018e-01,  1.4776e-01,  3.0454e-02,
         -1.1187e-01, -9.0126e-02],
        [ 4.5984e-02, -1.4347e-01,  1.4825e-01,  5.7340e-02, -1.0277e-01,
         -6.9594e-02, -1.2452e-01, -6.1697e-03, -1.1103e-02,  1.8471e-01,
          1.4836e-01,  6.1166e-02, -1.0890e-01, -1.1889e-01,  3.7529e-02,
          1.4587e-01,  2.6006e-02,  1.9668e-01,  1.8302e-01,  9.7302e-02,
          2.0241e-03,  1.8061e-01,  4.8093e-02,  5.8915e-02, -2.8016e-02,
          9.3193e-02, -9.7830e-02, -7.6507e-02,  1.6728e-01, -4.7238e-02,
          1.5108e-01,  6.8787e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0194,  0.1325, -0.0921,  0.1243, -0.0378, -0.0494, -0.1289, -0.0291,
         0.0355, -0.0561,  0.2287,  0.1207,  0.2191,  0.0410, -0.0791,  0.1669],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2769,  0.0089,  0.1651, -0.0481, -0.2363,  0.2001,  0.1059, -0.2110,
          0.2061,  0.2533, -0.1516,  0.2961, -0.1568,  0.1328,  0.3154, -0.0279],
        [ 0.1254,  0.2284, -0.1717, -0.0177,  0.0892, -0.1784, -0.2486, -0.0913,
          0.2043,  0.2161,  0.2841, -0.0191,  0.3081,  0.1284,  0.1901, -0.0196],
        [-0.0482,  0.1204, -0.1030,  0.1825,  0.0083,  0.0878,  0.0825,  0.1334,
         -0.1175, -0.1802, -0.0071, -0.1169,  0.0286,  0.1508, -0.0331, -0.2065],
        [-0.2458,  0.0462,  0.1227, -0.0038,  0.0238, -0.2396, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1118, -0.1045, -0.1644, -0.0257,  0.1714, -0.2467],
        [-0.1935,  0.1541, -0.1715, -0.1171,  0.0695, -0.2501,  0.0018, -0.0945,
          0.2284, -0.0843, -0.1954,  0.1877, -0.0364,  0.0885,  0.2643, -0.0110],
        [-0.1928, -0.1569, -0.1029, -0.1210, -0.1960, -0.0391, -0.2172,  0.2103,
         -0.0060, -0.1088,  0.2647,  0.0345, -0.0429,  0.2402, -0.1249,  0.2600],
        [ 0.2160, -0.1211, -0.2185,  0.0575, -0.1429, -0.1266,  0.1538, -0.0956,
          0.1858,  0.2671,  0.2583,  0.2189,  0.0581,  0.1795,  0.2200,  0.1320],
        [-0.0134, -0.0249,  0.2424,  0.0079, -0.1033, -0.0643, -0.1859, -0.1645,
          0.2366, -0.1180, -0.1840, -0.0560, -0.1984,  0.0541,  0.2037, -0.1990]],
       device='cuda:0')), ('mlp.4.bias', tensor([ 0.0088, -0.0644,  0.0763, -0.1694,  0.0859, -0.1484,  0.2808, -0.0164],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0590, -0.0079, -0.1046,  0.0816,  0.0938,  0.0438, -0.0484,  0.0443,
          0.1164,  0.0221, -0.0155,  0.0827,  0.0254, -0.0050, -0.1015, -0.0431,
         -0.1355, -0.2443,  0.1570, -0.1861, -0.0301, -0.0589, -0.1918,  0.1419]],

epoch: 4, loss: 0.52, time: 5.74:   1%|▏            | 4/400 [00:20<34:43,  5.26s/it]
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6884, -0.6249, -0.8642,  ..., -0.9834, -1.3053,  0.1663],
        [ 1.4813,  0.7260,  0.5563,  ...,  0.4802, -0.1933,  1.5486],
        [ 1.2260, -1.3311,  2.1196,  ..., -0.0150, -0.3439, -0.3143],
        ...,
        [-1.2594, -0.4453, -1.6403,  ..., -0.3737, -0.1764,  2.0194],
        [ 1.0579, -0.5968,  2.2977,  ..., -2.0485, -0.1054,  1.5836],
        [ 1.3449, -2.1503, -0.2579,  ..., -0.9274, -1.1251,  0.1474]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2207,  0.3153, -1.4857,  ...,  0.0731,  0.2302,  0.6362],
        [ 0.0667,  0.7412,  0.1386,  ..., -0.0818,  1.4353,  0.2634],
        [ 1.4029,  0.6229,  1.9290,  ...,  0.0509, -2.1334,  1.7312],
        ...,
        [-0.4209,  0.3342,  0.3629,  ..., -0.9587,  0.7072, -2.7606],
        [ 0.6831, -1.1930, -1.7620,  ...,  0.8823,  0.0491,  0.5054],
        [ 0.7308,  0.7110, -0.3877,  ..., -2.7122,  0.1857, -0.3366]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.1781,  0.1076,  0.1648,  ..., -0.0431, -0.1863,  0.0167],
        [-0.0201,  0.0550, -0.0422,  ..., -0.0607,  0.1667, -0.1093],
        [ 0.1381,  0.0726, -0.1250,  ..., -0.1165, -0.0494,  0.1008],
        ...,
        [-0.0755,  0.1174,  0.1007,  ..., -0.1387,  0.1507, -0.1804],
        [ 0.0009,  0.0449, -0.1505,  ...,  0.0961, -0.0445,  0.0473],
        [-0.1144,  0.0457,  0.1798,  ...,  0.0817,  0.0653,  0.1523]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.1004, -0.0027, -0.0545, -0.0041,  0.1568,  0.0208,  0.0555,  0.0664,
        -0.0466, -0.0963, -0.0274, -0.1982, -0.0851,  0.0627, -0.0065,  0.1615,
        -0.0892, -0.0575, -0.1170,  0.2001,  0.1576,  0.2094,  0.0716,  0.0296,
         0.1261, -0.0056, -0.0011,  0.0319,  0.1099, -0.0226,  0.0658, -0.0994],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.9764e-01, -9.0789e-02,  6.0775e-02,  1.1808e-01,  1.1608e-01,
          1.8445e-01, -9.3397e-02,  1.8808e-01,  1.5410e-01, -8.7890e-02,
          2.1126e-01, -7.4331e-02,  1.0355e-01,  1.7677e-01,  6.3848e-03,
          2.2578e-01, -1.4845e-02,  1.2021e-01,  1.7871e-01,  2.2449e-01,
         -3.2086e-02,  2.0263e-01,  1.9974e-01,  1.2960e-01,  1.3197e-01,
         -3.4377e-02,  1.4115e-01, -5.2071e-02,  1.4855e-01,  8.6959e-02,
         -1.7369e-02,  1.3063e-02],
        [-1.2255e-01, -1.3390e-01,  3.3076e-02,  2.6968e-02, -1.4916e-01,
          1.2884e-01, -9.9579e-02, -8.1519e-02,  1.2610e-02,  7.0294e-02,
          1.0576e-01, -1.5839e-02,  1.7528e-01,  7.1146e-02, -1.6257e-02,
          1.4638e-01, -1.7252e-01,  3.3138e-02,  1.2279e-01,  1.6574e-01,
         -1.1844e-01, -3.2109e-03,  4.7916e-02,  1.5515e-01, -1.1248e-01,
         -1.4278e-01, -1.6973e-02,  1.5686e-01,  1.6452e-01, -6.5551e-03,
         -1.2054e-01,  1.0148e-01],
        [ 6.1123e-02,  9.7157e-02, -1.3876e-01, -1.2826e-01,  1.6613e-02,
          4.2345e-02, -7.6152e-02,  6.9601e-02, -8.6952e-02,  2.3494e-02,
         -7.4653e-06, -1.7516e-02, -1.0379e-01,  1.0332e-03,  7.2522e-02,
          2.7777e-03,  9.9203e-02, -1.5182e-01, -1.4293e-02, -1.5064e-01,
          4.0946e-02,  4.9207e-02, -3.1445e-02,  3.9269e-02,  5.6808e-02,
         -1.1497e-01, -1.7654e-01, -1.6017e-01, -1.1351e-01, -8.4358e-03,
          9.0631e-02, -1.3838e-01],
        [-8.4073e-03,  1.3320e-02, -8.1921e-02,  4.8113e-02,  4.0161e-02,
         -1.1657e-03, -2.0076e-01,  9.9157e-02, -7.1563e-02, -1.7821e-01,
         -1.5336e-01,  4.6898e-02,  1.0420e-01, -1.1871e-01, -1.9930e-01,
         -1.9862e-01,  5.9576e-02,  1.1239e-01, -9.0128e-02,  7.9199e-02,
          7.8971e-02,  4.3153e-02,  4.9563e-02,  1.1763e-01,  6.6494e-02,
         -1.0653e-01,  1.2094e-02, -7.8831e-02,  3.5176e-02, -9.4289e-02,
         -1.3219e-01, -1.1003e-01],
        [ 7.9628e-02,  1.0931e-01, -1.2302e-01,  9.6733e-02, -1.6501e-01,
          1.3984e-01, -6.5262e-02,  3.7045e-02, -1.2033e-01,  1.0844e-01,
         -1.3708e-01, -7.4607e-02,  1.1961e-01, -1.0826e-01, -1.8216e-01,
         -6.6906e-02, -1.0026e-01,  3.4569e-02, -5.9297e-02, -2.1495e-02,
         -5.0518e-02,  9.3650e-02, -2.2629e-02, -7.1981e-02, -3.0970e-02,
          1.7940e-03, -1.3606e-01,  9.0564e-02, -1.6039e-01, -5.5369e-03,
          3.0882e-02, -1.6515e-01],
        [ 9.0690e-02, -1.0271e-01,  7.3376e-02,  1.3729e-01, -1.2907e-01,
          3.2183e-02,  7.7553e-02, -2.5528e-02,  3.1145e-02,  9.6919e-02,
         -2.2878e-03,  5.2583e-02,  1.4785e-01,  1.2820e-02,  1.8636e-03,
         -1.8490e-01,  1.5572e-01,  6.3694e-02,  8.1833e-02, -1.6188e-01,
          3.8877e-02,  8.5805e-02, -9.1394e-02,  5.1481e-02, -1.1133e-01,
         -9.1820e-02, -1.2147e-01, -1.7046e-01, -1.2552e-01,  2.4522e-03,
         -1.4001e-01, -1.4720e-01],
        [-1.4720e-01,  1.6759e-01,  1.0609e-01, -1.5792e-01, -1.8007e-01,
         -1.0374e-01,  1.6212e-01, -5.6030e-02,  2.5236e-02,  3.1345e-02,
         -1.1240e-01, -1.7502e-01,  8.0946e-02,  1.3284e-01, -1.6260e-01,
          5.1846e-02,  3.6153e-02,  3.6507e-02, -8.3327e-02,  1.1502e-01,
          3.6192e-02, -9.3396e-05, -9.7105e-02, -7.4313e-02,  1.2719e-01,
         -2.6789e-03,  1.6167e-01, -1.5978e-01, -1.1956e-01,  1.5211e-01,
         -1.2509e-01,  8.1477e-02],
        [-9.9872e-02, -2.2920e-02, -1.4977e-01,  1.1464e-02, -9.5592e-02,
          9.8959e-02, -1.5575e-01, -1.3891e-01,  2.5477e-02, -1.1495e-01,
         -1.3286e-01,  5.6248e-02, -6.5934e-02,  1.3589e-01, -1.9710e-02,
          3.6167e-02,  8.7092e-03, -4.2757e-03,  1.2969e-01,  8.8412e-02,
          7.7994e-02, -3.1826e-02, -6.5187e-02,  9.1960e-02, -7.4985e-02,
         -1.1545e-01,  5.0100e-02,  7.5243e-02, -4.1520e-02,  1.5231e-01,
          7.2401e-02, -3.1224e-03],
        [ 1.5160e-01,  1.4037e-01,  1.3468e-01,  2.3039e-01,  7.9690e-02,
          1.9434e-01,  7.5088e-02,  1.2350e-01,  1.8291e-01, -5.4775e-02,
         -5.6941e-02, -5.9684e-02, -4.2265e-02,  7.3791e-03,  1.1929e-03,
          7.3816e-03,  1.5481e-01,  3.5204e-02,  2.1994e-01, -8.9697e-03,
         -5.9383e-04,  1.1937e-01,  4.8689e-02,  9.7843e-02,  1.0293e-01,
          7.8153e-02, -9.8462e-02, -6.5341e-02, -2.8024e-02,  1.4239e-02,
         -6.4083e-02, -7.1299e-02],
        [-1.1893e-01,  3.4270e-02,  8.4456e-02, -7.7156e-02,  8.2236e-02,
          9.7080e-03,  1.1218e-01,  6.5781e-04, -9.4177e-02,  1.4015e-02,
         -4.3184e-02,  1.1155e-01,  6.8811e-02,  1.0625e-01,  7.5748e-02,
          1.5287e-01, -3.7707e-02,  4.0377e-02, -2.7746e-02,  2.2228e-01,
          2.0914e-01, -2.4764e-02, -4.8437e-02,  1.8878e-01, -7.6305e-02,
          8.1330e-02, -1.0850e-01,  9.1449e-02,  6.6662e-02,  1.4012e-01,
          4.4742e-02,  1.6415e-01],
        [ 1.4603e-01, -1.4802e-01,  8.2924e-02,  1.6147e-01, -3.4589e-02,
         -6.3758e-02, -5.7445e-02,  2.6677e-02,  1.1574e-01, -3.7761e-02,
         -2.8941e-02,  1.2663e-02,  2.0755e-01,  1.9381e-01,  6.2949e-02,
          1.1524e-01, -4.1542e-03, -3.5061e-02,  9.5859e-02,  6.3320e-02,
         -4.9036e-02,  1.7529e-01,  1.1085e-01, -1.0085e-01,  2.2466e-02,
          2.0901e-01, -1.4847e-01, -1.0309e-01,  4.8297e-02, -4.0144e-02,
          2.1579e-01,  2.2580e-01],
        [ 1.3348e-01,  4.3294e-02, -8.1618e-02,  1.8839e-01, -3.1163e-02,
          1.1605e-01,  2.3002e-01,  7.2686e-02,  8.8526e-02, -2.4742e-02,
          2.1100e-01, -2.3577e-03, -9.3119e-02,  1.2526e-01,  1.4050e-01,
          2.6848e-02, -4.8045e-02,  1.8135e-01,  8.8980e-02,  5.8732e-02,
         -1.0944e-01, -9.9009e-02,  4.3066e-02, -4.5100e-02, -1.1490e-03,
         -8.2511e-02,  2.2859e-02, -6.2633e-02,  1.2773e-01,  2.0947e-01,
         -1.2717e-01,  4.4694e-02],
        [ 1.7228e-01,  1.6726e-01,  1.3566e-01,  1.0917e-01, -2.7553e-02,
          1.8912e-01,  3.1587e-02,  2.1000e-01,  2.0350e-01,  1.0760e-01,
          8.1407e-02, -8.4180e-03, -9.8838e-02,  6.6658e-02,  1.0916e-01,
          1.5699e-02,  2.1141e-01,  9.9012e-02,  6.0029e-02, -5.2035e-02,
         -3.9910e-02,  2.9351e-02,  2.3417e-01,  1.5019e-01,  2.1296e-01,
         -1.9309e-02,  3.3258e-02,  7.0948e-02,  1.1871e-01,  7.5488e-02,
         -8.5517e-02,  3.8851e-02],
        [ 1.1045e-01, -1.6232e-01,  1.3478e-01,  6.1623e-02,  1.5999e-01,
          5.6518e-02, -5.7630e-02,  2.1605e-01, -7.7828e-02,  5.8909e-02,
          6.2899e-02,  3.2083e-02,  1.3690e-01,  7.7905e-02,  9.1475e-02,
         -7.3823e-02,  1.6430e-01,  7.0306e-02, -3.9411e-02,  1.5448e-01,
         -8.2735e-03,  1.4506e-01,  1.6079e-01,  9.4922e-04,  5.3558e-02,
          2.1589e-01, -1.3046e-01,  5.0689e-02, -1.1377e-01,  7.0224e-02,
         -6.0528e-02,  4.8641e-02],
        [ 1.3719e-02, -1.2294e-01,  1.8340e-01,  2.3010e-01,  1.3162e-02,
          4.8470e-02,  3.8265e-02,  2.2573e-01,  1.9846e-01,  1.2902e-01,
         -1.1155e-02, -4.3352e-02, -4.0911e-02,  2.0403e-01,  1.3348e-01,
          7.4017e-02,  6.6722e-04,  9.4199e-02,  1.4758e-01,  2.2269e-01,
          1.9284e-01,  8.8679e-02,  4.4859e-02,  1.3494e-01,  6.2468e-02,
          8.0762e-02, -8.3486e-02,  1.5018e-01,  1.4776e-01,  3.0454e-02,
         -1.1187e-01, -9.0126e-02],
        [ 4.5984e-02, -1.4347e-01,  1.4825e-01,  5.7340e-02, -1.0277e-01,
         -6.9594e-02, -1.2452e-01, -6.1697e-03, -1.1103e-02,  1.8471e-01,
          1.4836e-01,  6.1166e-02, -1.0890e-01, -1.1889e-01,  3.7529e-02,
          1.4587e-01,  2.6006e-02,  1.9668e-01,  1.8302e-01,  9.7302e-02,
          2.0241e-03,  1.8061e-01,  4.8093e-02,  5.8915e-02, -2.8016e-02,
          9.3193e-02, -9.7830e-02, -7.6507e-02,  1.6728e-01, -4.7238e-02,
          1.5108e-01,  6.8787e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0194,  0.1325, -0.0921,  0.1243, -0.0378, -0.0494, -0.1289, -0.0291,
         0.0355, -0.0561,  0.2287,  0.1207,  0.2191,  0.0410, -0.0791,  0.1669],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2769,  0.0089,  0.1651, -0.0481, -0.2363,  0.2001,  0.1059, -0.2110,
          0.2061,  0.2533, -0.1516,  0.2961, -0.1568,  0.1328,  0.3154, -0.0279],
        [ 0.1254,  0.2284, -0.1717, -0.0177,  0.0892, -0.1784, -0.2486, -0.0913,
          0.2043,  0.2161,  0.2841, -0.0191,  0.3081,  0.1284,  0.1901, -0.0196],
        [-0.0482,  0.1204, -0.1030,  0.1825,  0.0083,  0.0878,  0.0825,  0.1334,
         -0.1175, -0.1802, -0.0071, -0.1169,  0.0286,  0.1508, -0.0331, -0.2065],
        [-0.2458,  0.0462,  0.1227, -0.0038,  0.0238, -0.2396, -0.0496,  0.0493,
          0.0078, -0.0763,  0.1118, -0.1045, -0.1644, -0.0257,  0.1714, -0.2467],
        [-0.1935,  0.1541, -0.1715, -0.1171,  0.0695, -0.2501,  0.0018, -0.0945,
          0.2284, -0.0843, -0.1954,  0.1877, -0.0364,  0.0885,  0.2643, -0.0110],
        [-0.1928, -0.1569, -0.1029, -0.1210, -0.1960, -0.0391, -0.2172,  0.2103,
         -0.0060, -0.1088,  0.2647,  0.0345, -0.0429,  0.2402, -0.1249,  0.2600],
        [ 0.2160, -0.1211, -0.2185,  0.0575, -0.1429, -0.1266,  0.1538, -0.0956,
          0.1858,  0.2671,  0.2583,  0.2189,  0.0581,  0.1795,  0.2200,  0.1320],
        [-0.0134, -0.0249,  0.2424,  0.0079, -0.1033, -0.0643, -0.1859, -0.1645,
          0.2366, -0.1180, -0.1840, -0.0560, -0.1984,  0.0541,  0.2037, -0.1990]],
       device='cuda:0')), ('mlp.4.bias', tensor([ 0.0088, -0.0644,  0.0763, -0.1694,  0.0859, -0.1484,  0.2808, -0.0164],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0590, -0.0079, -0.1046,  0.0816,  0.0938,  0.0438, -0.0484,  0.0443,
          0.1164,  0.0221, -0.0155,  0.0827,  0.0254, -0.0050, -0.1015, -0.0431,
         -0.1355, -0.2443,  0.1570, -0.1861, -0.0301, -0.0589, -0.1918,  0.1419]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.1572], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-0.6882, -0.6247, -0.8639,  ..., -0.9831, -1.3049,  0.1663],
        [ 1.4808,  0.7257,  0.5561,  ...,  0.4800, -0.1933,  1.5481],
        [ 1.2256, -1.3307,  2.1190,  ..., -0.0150, -0.3438, -0.3142],
        ...,
        [-1.2590, -0.4451, -1.6398,  ..., -0.3736, -0.1763,  2.0188],
        [ 1.0575, -0.5966,  2.2970,  ..., -2.0478, -0.1054,  1.5831],
        [ 1.3445, -2.1496, -0.2578,  ..., -0.9271, -1.1248,  0.1474]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[-1.2161,  0.3107, -1.4888,  ...,  0.0685,  0.2324,  0.6324],
        [ 0.0689,  0.7380,  0.1356,  ..., -0.0846,  1.4343,  0.2611],
        [ 1.4033,  0.6216,  1.9267,  ...,  0.0490, -2.1319,  1.7295],
        ...,
        [-0.4196,  0.3326,  0.3614,  ..., -0.9599,  0.7079, -2.7610],
        [ 0.6834, -1.1933, -1.7624,  ...,  0.8811,  0.0497,  0.5043],
        [ 0.7311,  0.7089, -0.3892,  ..., -2.7114,  0.1859, -0.3373]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 1.5902e-01,  1.6630e+00,  1.3864e+00,  ..., -4.7920e-01,
          1.0746e+00, -2.9834e-01],
        [ 3.5600e-01, -1.2193e+00, -3.2282e-01,  ..., -6.8521e-01,
         -1.3397e+00, -8.4846e-01],
        [-1.2942e+00,  6.8601e-01,  8.5593e-01,  ...,  4.2459e-01,
         -1.0545e+00, -2.0349e+00],
        ...,
        [ 1.8293e+00, -2.8415e+00, -4.4821e-01,  ..., -2.1804e-03,
          1.3529e+00,  2.8080e-01],
        [-7.8240e-01, -3.6420e-01,  2.0404e-01,  ...,  1.0822e+00,
         -4.1318e-01, -7.0405e-01],
        [-8.0812e-01, -6.5820e-01,  1.2892e-01,  ...,  1.6627e+00,
         -2.3857e+00, -7.1447e-01]], device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.0853,  3.0316,  0.2568,  ..., -1.0109, -0.7149,  1.7417],
        [-0.3170, -1.0044,  2.0576,  ...,  0.7916,  0.8567,  0.4495],
        [ 2.2719, -0.5642, -1.1117,  ..., -0.2660, -0.4615,  0.5535],
        ...,
        [ 0.4172,  0.0807, -1.6947,  ...,  0.6046,  1.5961,  0.9140],
        [-0.9466,  0.1680,  0.9480,  ..., -0.8930,  0.7019,  0.0384],
        [ 0.8495, -0.1496, -1.0890,  ...,  0.1194,  2.7211,  0.9722]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-1.7811e-01,  1.0535e-01,  1.6735e-01,  ..., -3.6743e-02,
         -1.9261e-01,  2.5663e-02],
        [-1.8498e-02,  5.4245e-02, -4.1435e-02,  ..., -6.2614e-02,
          1.7481e-01, -1.1393e-01],
        [ 1.3960e-01,  7.1031e-02, -1.2222e-01,  ..., -1.0768e-01,
         -4.7634e-02,  1.0256e-01],
        ...,
        [-7.3288e-02,  1.1813e-01,  1.0299e-01,  ..., -1.3914e-01,
          1.5071e-01, -1.8683e-01],
        [ 7.2147e-07,  4.5841e-02, -1.5166e-01,  ...,  9.0435e-02,
         -4.2464e-02,  5.2233e-02],
        [-1.1425e-01,  4.4463e-02,  1.8212e-01,  ...,  8.9091e-02,
          6.1266e-02,  1.5670e-01]], device='cuda:0')), ('mlp.0.bias', tensor([-0.0905, -0.0041, -0.0430,  0.0099,  0.1687,  0.0315,  0.0649,  0.0789,
        -0.0340, -0.0864, -0.0152, -0.1968, -0.0737,  0.0758,  0.0038,  0.1725,
        -0.0785, -0.0475, -0.1080,  0.2124,  0.1679,  0.2199,  0.0844,  0.0405,
         0.1391,  0.0048, -0.0030,  0.0414,  0.1224, -0.0133,  0.0561, -0.0875],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 2.0885e-01, -9.7861e-02,  7.5337e-02,  1.3523e-01,  1.3111e-01,
          1.9686e-01, -8.0497e-02,  2.0416e-01,  1.6798e-01, -7.7818e-02,
          2.2595e-01, -6.8559e-02,  1.1673e-01,  1.9295e-01,  1.6405e-02,
          2.3747e-01,  2.1093e-03,  1.3393e-01,  1.8931e-01,  2.3803e-01,
         -2.0034e-02,  2.1753e-01,  2.1435e-01,  1.4106e-01,  1.4319e-01,
         -2.0439e-02,  1.3269e-01, -4.3622e-02,  1.6386e-01,  9.7968e-02,
         -1.0636e-02,  2.5709e-02],
        [-1.1133e-01, -1.3910e-01,  4.7278e-02,  4.3706e-02, -1.3455e-01,
          1.4121e-01, -8.6448e-02, -6.6239e-02,  2.7007e-02,  8.0084e-02,
          1.2048e-01, -9.4324e-03,  1.8863e-01,  8.7286e-02, -6.3091e-03,
          1.5788e-01, -1.5717e-01,  4.5078e-02,  1.3342e-01,  1.7914e-01,
         -1.0634e-01,  1.1624e-02,  6.2642e-02,  1.6660e-01, -1.0176e-01,
         -1.2862e-01, -2.3410e-02,  1.6561e-01,  1.7989e-01,  4.2513e-03,
         -1.1363e-01,  1.1389e-01],
        [ 6.0801e-02,  9.7543e-02, -1.3995e-01, -1.2904e-01,  1.6189e-02,
          4.2802e-02, -7.6431e-02,  6.9987e-02, -8.6852e-02,  2.3495e-02,
         -1.5410e-04, -1.6789e-02, -1.0431e-01,  5.6737e-04,  7.0747e-02,
          2.4965e-03,  1.0046e-01, -1.5115e-01, -1.4400e-02, -1.5085e-01,
          4.1359e-02,  4.9591e-02, -3.1796e-02,  3.7418e-02,  5.6189e-02,
         -1.1495e-01, -1.7505e-01, -1.5910e-01, -1.1383e-01, -9.3906e-03,
          9.2534e-02, -1.3797e-01],
        [-1.3484e-02,  1.7043e-02, -8.5743e-02,  3.7045e-02,  3.0275e-02,
         -3.4864e-03, -2.0265e-01,  8.8344e-02, -7.3820e-02, -1.8651e-01,
         -1.5634e-01,  4.6166e-02,  1.0258e-01, -1.2366e-01, -2.0146e-01,
         -2.0462e-01,  4.7892e-02,  1.0177e-01, -8.8131e-02,  7.1191e-02,
          7.6703e-02,  4.2446e-02,  4.9429e-02,  1.1520e-01,  5.8026e-02,
         -1.1469e-01,  1.8019e-02, -7.7199e-02,  2.9155e-02, -9.5830e-02,
         -1.3705e-01, -1.1219e-01],
        [ 8.1700e-02,  1.1451e-01, -1.2357e-01,  9.5749e-02, -1.6697e-01,
          1.3816e-01, -6.3053e-02,  3.6905e-02, -1.1683e-01,  1.0568e-01,
         -1.3799e-01, -7.6066e-02,  1.1791e-01, -1.0715e-01, -1.8348e-01,
         -6.7499e-02, -1.0255e-01,  3.3657e-02, -5.9154e-02, -2.2610e-02,
         -5.0116e-02,  9.2286e-02, -2.5306e-02, -7.1757e-02, -3.2465e-02,
         -2.6946e-03, -1.3580e-01,  9.1471e-02, -1.6284e-01, -6.6903e-03,
          2.6224e-02, -1.6500e-01],
        [ 8.7579e-02, -1.0207e-01,  7.1617e-02,  1.3666e-01, -1.3165e-01,
          3.0833e-02,  7.6524e-02, -2.8110e-02,  3.1222e-02,  9.6468e-02,
         -4.4245e-03,  5.2269e-02,  1.4972e-01,  1.3006e-02, -2.3700e-03,
         -1.8993e-01,  1.5190e-01,  6.0738e-02,  8.1456e-02, -1.6444e-01,
          3.8983e-02,  8.6110e-02, -9.3203e-02,  4.7941e-02, -1.1299e-01,
         -9.4336e-02, -1.1836e-01, -1.7045e-01, -1.2631e-01,  1.4384e-03,
         -1.4338e-01, -1.4912e-01],
        [-1.4820e-01,  1.7574e-01,  1.0610e-01, -1.6271e-01, -1.8489e-01,
         -9.5974e-02,  1.6560e-01, -6.0483e-02,  2.6705e-02,  3.4040e-02,
         -1.1569e-01, -1.7417e-01,  7.5102e-02,  1.3268e-01, -1.6013e-01,
          5.1091e-02,  3.8781e-02,  3.9079e-02, -7.7395e-02,  1.1801e-01,
          3.8500e-02, -2.3837e-03, -9.9175e-02, -7.6673e-02,  1.2974e-01,
          2.0299e-03,  1.7558e-01, -1.5183e-01, -1.2056e-01,  1.5200e-01,
         -1.2111e-01,  8.0429e-02],
        [-1.0277e-01, -1.3562e-02, -1.5281e-01,  9.2612e-03, -9.7637e-02,
          1.0059e-01, -1.5141e-01, -1.4420e-01,  2.6525e-02, -1.1581e-01,
         -1.3743e-01,  5.9226e-02, -6.7647e-02,  1.3287e-01, -1.7953e-02,
          3.2431e-02,  1.3257e-02, -5.0728e-03,  1.2953e-01,  9.0227e-02,
          7.5719e-02, -3.5978e-02, -7.2647e-02,  9.2882e-02, -7.4255e-02,
         -1.1435e-01,  6.4918e-02,  8.0755e-02, -4.3203e-02,  1.5223e-01,
          7.6448e-02, -4.4506e-03],
        [ 1.6284e-01,  1.3298e-01,  1.4937e-01,  2.4777e-01,  9.4953e-02,
          2.0692e-01,  8.8243e-02,  1.3977e-01,  1.9701e-01, -4.4630e-02,
         -4.2016e-02, -5.3839e-02, -2.8905e-02,  2.3821e-02,  1.1283e-02,
          1.9044e-02,  1.7196e-01,  4.9240e-02,  2.3065e-01,  4.9424e-03,
          1.1471e-02,  1.3446e-01,  6.3415e-02,  1.0942e-01,  1.1439e-01,
          9.2176e-02, -1.0682e-01, -5.6695e-02, -1.2443e-02,  2.5488e-02,
         -5.7291e-02, -5.8419e-02],
        [-1.0729e-01,  2.7943e-02,  9.9102e-02, -5.9800e-02,  9.7407e-02,
          2.2560e-02,  1.2514e-01,  1.6832e-02, -7.9931e-02,  2.4287e-02,
         -2.8170e-02,  1.1728e-01,  8.2165e-02,  1.2260e-01,  8.5834e-02,
          1.6464e-01, -2.0682e-02,  5.4257e-02, -1.7111e-02,  2.3594e-01,
          2.2122e-01, -9.3083e-03, -3.3862e-02,  2.0026e-01, -6.4748e-02,
          9.5407e-02, -1.1598e-01,  9.9929e-02,  8.2158e-02,  1.5137e-01,
          5.1506e-02,  1.7682e-01],
        [ 1.5735e-01, -1.5453e-01,  9.7860e-02,  1.7909e-01, -1.8997e-02,
         -5.0728e-02, -4.3661e-02,  4.3056e-02,  1.3032e-01, -2.7529e-02,
         -1.3915e-02,  1.8738e-02,  2.2116e-01,  2.1050e-01,  7.3389e-02,
          1.2713e-01,  1.3428e-02, -2.0628e-02,  1.0695e-01,  7.7561e-02,
         -3.6727e-02,  1.9057e-01,  1.2558e-01, -8.8965e-02,  3.4240e-02,
          2.2319e-01, -1.5605e-01, -9.3831e-02,  6.4168e-02, -2.8220e-02,
          2.2254e-01,  2.3878e-01],
        [ 1.4477e-01,  3.5954e-02, -6.6754e-02,  2.0589e-01, -1.5784e-02,
          1.2859e-01,  2.4322e-01,  8.9037e-02,  1.0267e-01, -1.4590e-02,
          2.2587e-01,  3.3883e-03, -7.9679e-02,  1.4179e-01,  1.5068e-01,
          3.8711e-02, -3.0733e-02,  1.9548e-01,  9.9763e-02,  7.2624e-02,
         -9.7250e-02, -8.3773e-02,  5.7736e-02, -3.3459e-02,  1.0310e-02,
         -6.8394e-02,  1.4239e-02, -5.3981e-02,  1.4332e-01,  2.2081e-01,
         -1.2042e-01,  5.7597e-02],
        [ 1.8351e-01,  1.6045e-01,  1.5029e-01,  1.2652e-01, -1.2294e-02,
          2.0176e-01,  4.4809e-02,  2.2619e-01,  2.1768e-01,  1.1768e-01,
          9.6248e-02, -2.3879e-03, -8.5420e-02,  8.3081e-02,  1.1930e-01,
          2.7497e-02,  2.2856e-01,  1.1298e-01,  7.0784e-02, -3.8134e-02,
         -2.7729e-02,  4.4388e-02,  2.4883e-01,  1.6182e-01,  2.2436e-01,
         -5.1693e-03,  2.5375e-02,  7.9744e-02,  1.3424e-01,  8.6783e-02,
         -7.8614e-02,  5.1601e-02],
        [ 1.2180e-01, -1.6856e-01,  1.4968e-01,  7.9376e-02,  1.7556e-01,
          6.9717e-02, -4.3692e-02,  2.3244e-01, -6.2892e-02,  6.9145e-02,
          7.7908e-02,  3.8560e-02,  1.5055e-01,  9.4730e-02,  1.0193e-01,
         -6.1883e-02,  1.8202e-01,  8.4765e-02, -2.8277e-02,  1.6880e-01,
          4.2091e-03,  1.6042e-01,  1.7550e-01,  1.2866e-02,  6.5407e-02,
          2.3019e-01, -1.3728e-01,  6.0230e-02, -9.7715e-02,  8.2129e-02,
         -5.3500e-02,  6.1707e-02],
        [ 2.5085e-02, -1.2955e-01,  1.9810e-01,  2.4739e-01,  2.8377e-02,
          6.1108e-02,  5.1417e-02,  2.4192e-01,  2.1254e-01,  1.3913e-01,
          3.7307e-03, -3.7118e-02, -2.7528e-02,  2.2038e-01,  1.4357e-01,
          8.5858e-02,  1.7833e-02,  1.0812e-01,  1.5834e-01,  2.3643e-01,
          2.0493e-01,  1.0381e-01,  5.9600e-02,  1.4652e-01,  7.3887e-02,
          9.4833e-02, -9.1364e-02,  1.5882e-01,  1.6324e-01,  4.1772e-02,
         -1.0493e-01, -7.7321e-02],
        [ 5.7195e-02, -1.5058e-01,  1.6361e-01,  7.5704e-02, -8.6681e-02,
         -5.6654e-02, -1.1002e-01,  1.0259e-02,  3.6714e-03,  1.9472e-01,
          1.6336e-01,  6.6152e-02, -9.4950e-02, -1.0183e-01,  4.8174e-02,
          1.5755e-01,  4.3902e-02,  2.1131e-01,  1.9399e-01,  1.1180e-01,
          1.3941e-02,  1.9586e-01,  6.2420e-02,  7.0528e-02, -1.6065e-02,
          1.0720e-01, -1.0724e-01, -6.7655e-02,  1.8338e-01, -3.4740e-02,
          1.5736e-01,  8.2046e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0081,  0.1440, -0.0916,  0.1204, -0.0395, -0.0516, -0.1215, -0.0243,
         0.0470, -0.0444,  0.2406,  0.1321,  0.2307,  0.0533, -0.0675,  0.1786],
       device='cuda:0')), ('mlp.4.weight', tensor([[ 0.2923,  0.0234,  0.1639, -0.0380, -0.2375,  0.1984,  0.0937, -0.2204,
          0.2219,  0.2680, -0.1354,  0.3112, -0.1421,  0.1495,  0.3318, -0.0125],
        [ 0.1408,  0.2428, -0.1731, -0.0077,  0.0878, -0.1799, -0.2607, -0.1007,
          0.2201,  0.2308,  0.3002, -0.0039,  0.3227,  0.1450,  0.2065, -0.0042],
        [-0.0463,  0.1250, -0.1021,  0.1829,  0.0114,  0.0891,  0.0896,  0.1423,
         -0.1160, -0.1772, -0.0055, -0.1138,  0.0320,  0.1511, -0.0319, -0.2050],
        [-0.2458,  0.0462,  0.1227, -0.0038,  0.0238, -0.2395, -0.0496,  0.0493,
          0.0077, -0.0763,  0.1118, -0.1045, -0.1644, -0.0257,  0.1713, -0.2467],
        [-0.1779,  0.1685, -0.1725, -0.1068,  0.0679, -0.2518, -0.0111, -0.1045,
          0.2444, -0.0694, -0.1789,  0.2029, -0.0216,  0.1054,  0.2809,  0.0045],
        [-0.1778, -0.1433, -0.1043, -0.1097, -0.1948, -0.0404, -0.2233,  0.2045,
          0.0098, -0.0949,  0.2799,  0.0496, -0.0284,  0.2556, -0.1090,  0.2744],
        [ 0.2313, -0.1066, -0.2198,  0.0674, -0.1442, -0.1281,  0.1414, -0.1051,
          0.2016,  0.2818,  0.2744,  0.2340,  0.0727,  0.1962,  0.2365,  0.1473],
        [-0.0135, -0.0248,  0.2422,  0.0077, -0.1033, -0.0642, -0.1858, -0.1645,
          0.2364, -0.1181, -0.1842, -0.0560, -0.1984,  0.0540,  0.2036, -0.1990]],
       device='cuda:0')), ('mlp.4.bias', tensor([ 0.0205, -0.0527,  0.0808, -0.1694,  0.0974, -0.1356,  0.2924, -0.0165],
       device='cuda:0')), ('output_layer.weight', tensor([[-0.0529, -0.0051, -0.1017,  0.0752,  0.0901,  0.0410, -0.0474,  0.0409,
          0.1092,  0.0197, -0.0133,  0.0773,  0.0232, -0.0040, -0.0970, -0.0398,
         -0.1514, -0.2602,  0.1624, -0.1861, -0.0458, -0.0749, -0.2070,  0.1417]],

epoch: 5, loss: 0.48, time: 6.08:   1%|▏            | 5/400 [00:29<39:14,  5.96s/it]
Traceback (most recent call last):
  File "src/main.py", line 85, in <module>
    main()
  File "src/main.py", line 66, in main
    trained_model = run_server(dataset, num_clients=args.c, epochs=args.epochs,
  File "/home/abenzaamia/NeuCF/federated/src/server.py", line 35, in run_server
    trained_weights = training_process(server_model, clients, num_clients, epochs, local_epochs, dataset, args)
  File "/home/abenzaamia/NeuCF/federated/src/federeco/train.py", line 66, in training_process
    w, loss = single_train_round(server_model, clients, local_epochs)
  File "/home/abenzaamia/NeuCF/federated/src/federeco/train.py", line 116, in single_train_round
    weights, loss = client.train(server_model_copy, local_epochs)
  File "/home/abenzaamia/NeuCF/federated/src/client.py", line 51, in train
    optimizer.step()
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/optimizer.py", line 280, in wrapper
    out = func(*args, **kwargs)
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/optimizer.py", line 33, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/adamw.py", line 171, in step
    adamw(
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/adamw.py", line 321, in adamw
    func(
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/adamw.py", line 553, in _multi_tensor_adamw
    bias_correction2_sqrt = [_dispatch_sqrt(bc) for bc in bias_correction2]
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/adamw.py", line 553, in <listcomp>
    bias_correction2_sqrt = [_dispatch_sqrt(bc) for bc in bias_correction2]
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/optim/optimizer.py", line 56, in _dispatch_sqrt
    return math.sqrt(x)
KeyboardInterrupt